question,answer,source
What is the primary purpose of the Choreo Marketplace?,The Choreo Marketplace primarily promotes and facilitates the reusing and sharing of services. It allows users to share all services deployed in Choreo.,docs\choreo-concepts\choreo-marketplace.md/Choreo Marketplace
What capabilities does the Choreo Marketplace offer to users regarding services?,"The Choreo Marketplace allows users to easily browse and search for available services. Additionally, users can refer to service definitions, documentation, and instructions on how to use a service within the Marketplace.",docs\choreo-concepts\choreo-marketplace.md/Choreo Marketplace
Why is effective discoverability important in the Choreo Marketplace?,"Effective discoverability is desirable in the Choreo Marketplace because it includes all services deployed in an organization, which may be a large number of services.",docs\choreo-concepts\choreo-marketplace.md/Discover services
What are the two primary methods available for discovering services in the Choreo Marketplace?,The two primary methods available for discovering services in the Choreo Marketplace are using the search bar and applying various filter criteria.,docs\choreo-concepts\choreo-marketplace.md/Discover services
Where is the search bar located in the Choreo Marketplace?,The search bar is located at the top of the Choreo Marketplace interface.,docs\choreo-concepts\choreo-marketplace.md/Discover services
What search attributes can users utilize when searching for services in the Choreo Marketplace?,"Users can utilize the following search attributes when searching for services in the Choreo Marketplace: Name, Label, Content, and All.",docs\choreo-concepts\choreo-marketplace.md/Discover services
"Describe what each search attribute (Name, Label, Content, All) allows users to search for.","The search attributes allow users to search for text in specific areas:
- **Name**: Searches within the service name.
- **Label**: Searches within the service labels.
- **Content**: Searches within the service content, including the overview, summary, and documentation.
- **All**: Searches across all the above criteria (Name, Label, and Content).",docs\choreo-concepts\choreo-marketplace.md/Discover services
Where is the filtering capability located in the Choreo Marketplace?,The filtering capability in the Choreo Marketplace is provided through the left-hand side filter panel.,docs\choreo-concepts\choreo-marketplace.md/Discover services
What are the main filter attributes available in the Choreo Marketplace?,The main filter attributes available in the Choreo Marketplace are 'Type' and 'Network Visibility'.,docs\choreo-concepts\choreo-marketplace.md/Discover services
"Explain the 'Type' filter attribute, including its available options and what each option signifies.","The 'Type' filter attribute enables users to categorize services based on their origin, with two available options:
- **Internal**: Refers to services deployed within Choreo.
- **Third-party**: Refers to services running externally to Choreo, which have been independently added to the Marketplace.",docs\choreo-concepts\choreo-marketplace.md/Discover services
"Explain the 'Network Visibility' filter attribute, including its available choices and what each choice represents.","The 'Network Visibility' filter attribute enables users to categorize services based on their network exposure level, with three choices:
- **Public**: Filters services that are exposed publicly.
- **Organization**: Represents services exposed across the entire organization.
- **Project**: Represents services exposed at the project level.",docs\choreo-concepts\choreo-marketplace.md/Discover services
How can a user access the detailed view of a service in the Choreo Marketplace?,A user can access the detailed view of a service by clicking on the service card.,docs\choreo-concepts\choreo-marketplace.md/Explore a service
What information is displayed in the header of the detailed service page?,"The header of the detailed service page features the service name, summary, version, labels, and service icon.",docs\choreo-concepts\choreo-marketplace.md/Explore a service
How many tabs organize the service content in the detailed service page?,The service content in the detailed service page is organized into four tabs.,docs\choreo-concepts\choreo-marketplace.md/Explore a service
Describe the content found under the 'Overview' tab and specify the condition under which this section might be disabled.,The 'Overview' tab displays the service overview content provided by the service developer. This section will be disabled if the service developer has not provided any content at the time of service creation. Service developers can provide this content via the Manage â†’ Marketplace section of the component.,docs\choreo-concepts\choreo-marketplace.md/Explore a service
"Describe the content found under the 'API definition' tab, including its source and what happens if an API definition is not provided.","The 'API definition' tab includes the API definition for the service, which is extracted from the `component.yaml` file in the user repository. If an API definition is not provided, this tab will be empty.",docs\choreo-concepts\choreo-marketplace.md/Explore a service
Describe the content found under the 'How to use' tab.,The 'How to use' tab includes instructions on how to use the selected service. This also includes instructions on creating a connection.,docs\choreo-concepts\choreo-marketplace.md/Explore a service
Describe the content found under the 'Related documents' tab.,The 'Related documents' tab includes any additional content the user has provided as documents through the Manage -> Marketplace section of the component.,docs\choreo-concepts\choreo-marketplace.md/Explore a service
What type of services can be added to the Choreo Marketplace?,Services can be added to the Marketplace as Choreo services.,docs\choreo-concepts\choreo-marketplace.md/Add a service to the Choreo Marketplace
What is a 'Choreo service' in the context of the Choreo Marketplace?,"In Choreo, a service exposed through the platform is termed a Choreo service, with each service being identifiable by an endpoint within a Choreo service component.",docs\choreo-concepts\choreo-marketplace.md/Add a service to the Choreo Marketplace
How is a Choreo service identifiable within the Marketplace?,"The Marketplace showcases a service for each endpoint within a service component, making each service identifiable by its endpoint.",docs\choreo-concepts\choreo-marketplace.md/Add a service to the Choreo Marketplace
When are Choreo services automatically added to the Marketplace?,"Upon deployment to the initial environment, Choreo services get automatically added to the Marketplace.",docs\choreo-concepts\choreo-marketplace.md/Add a service to the Choreo Marketplace
What essential details does Choreo automatically collect during deployment to generate service entries in the Marketplace?,"During deployment, Choreo effortlessly collects essential details such as the component name, endpoint name, description, and service definitions. These details are then utilized to generate the corresponding service entries in the Marketplace.",docs\choreo-concepts\choreo-marketplace.md/Add a service to the Choreo Marketplace
What is the naming convention for a service in the Marketplace that is derived from a Choreo service component?,The service name in the Marketplace follows the convention of `component name - endpoint name`.,docs\choreo-concepts\choreo-marketplace.md/Add a service to the Choreo Marketplace
How are service versions displayed in the Choreo Marketplace?,"In the Choreo Marketplace, service versions are displayed in their major version format.",docs\choreo-concepts\choreo-marketplace.md/Service versioning in the Choreo Marketplace
What does each service entry in the Choreo Marketplace represent concerning its major version?,"Each service in the Choreo Marketplace represents the latest version of the service within its major version, following semantic versioning principles.",docs\choreo-concepts\choreo-marketplace.md/Service versioning in the Choreo Marketplace
Provide an example to illustrate how service versions are displayed and represented in the Choreo Marketplace.,"For example, if a Choreo service has versions `v1.0`, `v1.1`, `v1.2`, and `v2.0`, the Choreo Marketplace displays services with versions `v1` and `v2`. These displayed versions `v1` and `v2` represent the latest versions `v1.2` and `v2.0` respectively.",docs\choreo-concepts\choreo-marketplace.md/Service versioning in the Choreo Marketplace
How does the Marketplace update when a new minor version of an already deployed service is released?,"When a new minor version of a service already deployed in Choreo is released, the corresponding service in the marketplace automatically updates to reflect the latest version within the same major version.",docs\choreo-concepts\choreo-marketplace.md/Service versioning in the Choreo Marketplace
What is the primary benefit of semantic-version-based intelligent routing when using a service from the Choreo Marketplace as a dependency?,"The primary benefit of semantic-version-based intelligent routing is that it ensures dependencies remain up-to-date without requiring manual updates within a major version, as the dependent service's traffic automatically routes to the latest version of the corresponding service within the same major version.",docs\choreo-concepts\choreo-marketplace.md/Service versioning in the Choreo Marketplace
"Explain how semantic-version-based intelligent routing works when a dependent service connects to a Choreo Marketplace service, using the provided example of `Foo` and `Bar`.","When a user creates a connection for their Choreo component named `Foo` to a Choreo service named `Bar`, which is available in the Choreo Marketplace as version `v1`, and if the latest version of `Bar` within the `v1` range is `v1.2`, the component `Foo` will automatically connect to `Bar` `v1.2`. Subsequently, if `Bar` releases version `v1.3`, traffic from `Foo` will automatically route to `Bar` `v1.3` without any manual intervention.",docs\choreo-concepts\choreo-marketplace.md/Service versioning in the Choreo Marketplace
How can services in the Choreo Marketplace be edited?,"Services in the Choreo Marketplace can be edited. During redeployment to any environment, Choreo automatically updates service definitions, visibility, and descriptions.",docs\choreo-concepts\choreo-marketplace.md/Edit services in the Choreo Marketplace
What specific service details are automatically updated during redeployment to any environment?,"During redeployment to any environment, Choreo automatically updates service definitions, visibility, and descriptions.",docs\choreo-concepts\choreo-marketplace.md/Edit services in the Choreo Marketplace
What is the primary benefit of Choreo's CI/CD experience?,Choreo provides a streamlined continuous integration and continuous deployment (CI/CD) experience to deploy applications and services efficiently across multiple environments.,docs\choreo-concepts\ci-cd.md/CI/CD Overview & Environments
"How does Choreo manage environments for projects, and what is an environment defined as?","Choreo creates environments for each project, where all components within the project share the environments. An environment is an isolated deployment area with restricted network and resource access. Services deployed in one environment cannot communicate with services deployed in another.",docs\choreo-concepts\ci-cd.md/CI/CD Overview & Environments
"What are the default environments provided by the Choreo cloud data plane, and can environments be customized in a private data plane organization?","The Choreo cloud data plane provides two default environments (i.e., development and production). However, if you are in a private data plane organization, you can customize and create multiple environments based on your requirements.",docs\choreo-concepts\ci-cd.md/CI/CD Overview & Environments
"Explain Choreo's 'build once, deploy many' strategy for managing components across multiple environments.","Choreo adopts a *build once, deploy many* strategy to manage components across multiple environments. An application is built only once (i.e., per commit if automatic build on commit is enabled or based on the selected commit during a manual build). Then it is promoted to subsequent environments. This allows testing changes in lower, non-production environments like development before promoting the build to production.",docs\choreo-concepts\ci-cd.md/CI/CD Overview & Environments
"How does Choreo handle configurations and secrets, and what types of information do they include?","Choreo injects configurations and secrets that you maintain at the environment level into components at runtime. This ensures a strict separation of environment-specific configurations from source code. Although configurations can vary across environments, the code and the built container remain unchanged. Configurations and secrets include: Resource credentials to a database, cache, or other backing services, and Credentials to external cloud services such as Amazon S3 or external APIs.",docs\choreo-concepts\ci-cd.md/CI/CD Overview & Environments
"How are configurations and secrets secured in Choreo, and where can they be stored in a private data plane organization?","All configurations and secrets are encrypted at rest and in transit and stored in a secure vault. In a private data plane organization, you can store configurations and secrets in your infrastructure.",docs\choreo-concepts\ci-cd.md/CI/CD Overview & Environments
"How are build pipelines generated in Choreo, and what are the general steps involved?","Choreo auto-generates build pipelines that may slightly differ depending on the component type you create. Generally, all build pipelines work as follows: Builds a container image either from the provided source code or from a given Dockerfile for a specific commit; Runs security and vulnerability scans if applicable, depending on the component type; Pushes the container image to a container registry (in the cloud data plane, Choreo pushes the image to a Choreo-managed registry, while in a private data plane organization, Choreo pushes the image to a registry that you own); Updates service endpoints and API specifications from the provided repository if applicable.",docs\choreo-concepts\ci-cd.md/Build
Do Choreo's buildpacks support integrating unit tests into the build pipeline?,"In addition to the general steps, some buildpacks support integrating unit tests into the build pipeline.",docs\choreo-concepts\ci-cd.md/Build
"What are repeatable builds in Choreo, and what happens if multiple builds are initiated from the same code version?","Choreo can replicate builds from an identical code version (Git commit). This means that multiple builds initiated from the same Git commit will generate Docker images with the same behavior. In the event of multiple builds from the same code version, Choreo preserves only the most recent version of the Docker image created from the particular code version.",docs\choreo-concepts\ci-cd.md/Build
"How can a build be triggered manually in Choreo, and what specific option is available for Admin and Choreo DevOps users?","On the **Build** page, you can click **Build Latest**. If necessary, you have the option to select a particular commit and build an image. Admin and Choreo DevOps users can trigger builds using specific tags from the connected Git repository. However, this action bypasses the standard branch-based deployment process and should only be used for critical, time-sensitive scenarios, as it can disrupt deployment track integrity.",docs\choreo-concepts\ci-cd.md/Build
"How can automatic builds be enabled in Choreo, and where can build logs be viewed?","If you want to automatically trigger a build with each commit, you can enable **Auto Build on Commit**. You can view build logs for specific builds on the **Build** page. To view details of a specific build, click **View Details** corresponding to the build.",docs\choreo-concepts\ci-cd.md/Build
What are the two approaches to deploy an image in Choreo once it's built?,"Once an image is built in Choreo, it can be deployed via the **Deploy** page using one of two approaches: **Manually deploy**: In the **Deploy** page, go to the **Set Up** card and click **Deploy**. **Automatically deploy on build**: In the **Deploy** page, go to the **Set Up** card and enable **Auto Deploy on Build**. This automatically initiates deployment upon the completion of an automatic build.",docs\choreo-concepts\ci-cd.md/Deployment
"What is the prerequisite for enabling 'Auto Deploy on Build', and why is it necessary?","To enable **Auto Deploy on Build**, you must enable **Auto Build on Commit**. This is because automatic deployment is not necessary or useful in scenarios where automatic build is not enabled.",docs\choreo-concepts\ci-cd.md/Deployment
"Are there any special considerations for deploying Ballerina components, especially regarding configurable values?","Yes, you must trigger the first build in a Ballerina component manually to ensure that Choreo applies the required configurations to the development environment, after which automatic builds can be enabled. Choreo automatically checks the configurable defined in your source code against the configurable values applied in an environment. Choreo requests the configurable values on deployment and promotion. If you have changed the configurables in your Ballerina component, auto-build pipelines can fail as a precaution to avoid a component crash at runtime due to missing configurables. This configurable verifying capability is only available for Ballerina components.",docs\choreo-concepts\ci-cd.md/Deployment
What precautions should be taken for Dockerfile-based components regarding configurations and secrets?,"For Dockerfile-based components, you must ensure to manage and update the configurations and secrets in environments ahead of time. You must also ensure backward compatibility between at least one release if you change the configurations.",docs\choreo-concepts\ci-cd.md/Deployment
Describe the 'set up area' and 'initial deployment' in Choreo's deploy phase.,"In the deploy phase, Choreo uses a setup area to merge the Docker image with its environment-independent configurations. Choreo then deploys this composite to the environment. This is known as the initial deployment.",docs\choreo-concepts\ci-cd.md/Deployment
What are immutable deployments in Choreo?,"Once Choreo deploys a component with configurations, the configurations become immutable. Any subsequent change results in a new deployment.",docs\choreo-concepts\ci-cd.md/Deployment
How does Choreo facilitate the promotion of a component to a higher environment?,Choreo builds a container once per GitHub commit and then promotes it to subsequent higher environments. You can go to the **Deploy** page of a component and promote it manually across environments.,docs\choreo-concepts\ci-cd.md/Deployment
What types of configurations can be defined in Choreo?,Choreo allows you to define both environment-independent configurations and environment-specific configurations.,docs\choreo-concepts\ci-cd.md/Configurations
How are environment-independent configurations managed and applied in Choreo?,"Environment-independent configurations apply to all environments. To change them, go to the **Deploy** page of the component, make the necessary configuration changes via the **Set Up** card, and then trigger a new deployment to the initial environment. From there, you can proceed to promote the component to higher environments.",docs\choreo-concepts\ci-cd.md/Configurations
How are environment-specific configurations managed and applied in Choreo?,"Environment-specific configurations apply to a particular environment. To change them, go to the **Deploy** page of the component, make the necessary configuration changes via the specific environment card, and trigger a new deployment.",docs\choreo-concepts\ci-cd.md/Configurations
"For which component types is the 'Execute' page applicable, and what information does it provide?","The information on the **Execute** page is only applicable to scheduled and manual task components. To track and monitor executions associated with a deployed scheduled task or manual task, go to the left navigation menu and click **Execute**. You can view current and historic execution details along with a quick snapshot of recent activity via the total count of executions within the last 30 days. For each execution, you can view vital details such as the unique execution ID, the time it was triggered, and relevant revision information.",docs\choreo-concepts\ci-cd.md/Task execution
"How can one view detailed logs for a specific task execution on the 'Execute' page, and what is the overall purpose of this information?","You can dive deeper into the details by clicking on a specific execution to access its associated logs. This information enhances transparency, troubleshooting capabilities, and overall execution management, allowing you to easily monitor and analyze workflows.",docs\choreo-concepts\ci-cd.md/Task execution
How does Choreo ensure zero downtime during deployments and promotions?,Choreo performs rolling updates to ensure zero downtime between deployments and promotions.,docs\choreo-concepts\ci-cd.md/Zero-downtime deployments
"What process occurs before traffic is switched to a new build during deployment, and what is the benefit of configuring health checks?","A new build undergoes a health check before traffic is switched to it from the current build. If you configure the necessary health checks for a component, it can prevent deploying and promoting unhealthy versions of a component.",docs\choreo-concepts\ci-cd.md/Zero-downtime deployments
"What is a component in the context of a project, specifically in a cloud-native application?",A component within a project represents a single unit of work in a cloud native application.,docs\choreo-concepts\component.md/Component Definition and Core Characteristics
What common types of units of work does a component usually represent?,"A component is usually a single microservice, API, or job/task.",docs\choreo-concepts\component.md/Component Definition and Core Characteristics
"How is a component linked to a Git repository in Choreo, and what content is expected in the linked directory path?",Each component in Choreo is attached to a given directory path in a Git repository which either contains program source code or a Dockerfile with build instructions.,docs\choreo-concepts\component.md/Component Definition and Core Characteristics
What is considered Choreo's fundamental unit for deployment?,A component is Choreoâ€™s unit of deployment.,docs\choreo-concepts\component.md/Component Definition and Core Characteristics
How does a component relate to the Kubernetes cluster during deployment in Choreo?,Each component maps to a single pod in the Kubernetes cluster (data plane) at deployment time.,docs\choreo-concepts\component.md/Component Definition and Core Characteristics
What are the operational implications of each component mapping to a single Kubernetes pod at deployment time in Choreo?,"Because each component maps to a single pod in the Kubernetes cluster (data plane) at deployment time, you can deploy, manage, and scale each component in Choreo independently.",docs\choreo-concepts\component.md/Component Definition and Core Characteristics
"Does Choreo offer support for different types of components, and if so, why?","Yes, Choreo supports different component types for various use cases.",docs\choreo-concepts\component.md/Component Types and Specific Features
Can you list some examples of component types supported by Choreo?,"Component types supported by Choreo include services, API proxies, integrations, web applications, and so on.",docs\choreo-concepts\component.md/Component Types and Specific Features
Do different component types in Choreo possess distinct functionalities?,"Yes, each component type hosts unique features based on its characteristics.",docs\choreo-concepts\component.md/Component Types and Specific Features
Provide an example of a unique feature associated with a specific component type in Choreo.,"For example, a scheduled integration component can accept a cron expression as a configuration to schedule an integration job/task.",docs\choreo-concepts\component.md/Component Types and Specific Features
"What are the two main forms in which services can exist, and what role do Connections play in Choreo?","Services can exist in two main forms: standalone and integrated. Connecting services is an integral part of creating integrated solutions. Choreo allows users to connect services using ""Connections,"" which enables the integration of a service intended for deployment on Choreo with other services on Choreo or with external resources.",docs\choreo-concepts\connections.md/# Connections
"Upon creating a connection to a service on Choreo, what information does Choreo provide, and how is this information used by developers?","Upon creating a connection to a service on Choreo, Choreo provides a Connection ID along with a set of connection parameters. Developers can then configure their service to establish a connection using this Connection ID and map the connection parameters to environment variable names within their Choreo component. These environment variable names can be read in the service implementation to retrieve the values, which are then used to create a programmatic connection to the desired service.",docs\choreo-concepts\connections.md/# Connections
"How does Choreo handle the injection of connection parameter values at runtime, and what are the benefits of this approach?","At runtime, Choreo dynamically injects values into the environment variables based on the configured mapping. This approach ensures that the connection parameter values and the service connection creation remain loosely coupled. This loose coupling provides developers with increased flexibility and ease of maintenance.",docs\choreo-concepts\connections.md/# Connections
What are the different visibility levels available for adding Connections in Choreo?,Connections in Choreo can be added in two different visibility levels: Project and Component.,docs\choreo-concepts\connections.md/## Visibility Levels of Connections
"What are Project Connections, and what is their scope of usage within Choreo?","Project Connections are Connections created to connect to services within a particular project. Their scope of usage is broad, as they can be used by any component within that specific project.",docs\choreo-concepts\connections.md/## Project Connections
Provide an example scenario where creating a Project Connection would be beneficial.,"An example scenario where a Project Connection would be beneficial is when there's a need to share a third-party service, such as Twilio, across an entire project. By creating a Project Connection for Twilio, all components within that project can reuse the same connection.",docs\choreo-concepts\connections.md/## Project Connections
"How do components refer to Project Connections, and how do Project Connections handle OAuth security for Choreo services?","Components can refer to Project Connections using the connection ID. When Project Connections are created to consume Choreo services under the OAuth security scheme, they will share the same OAuth application across the project. Consequently, any component reusing such a connection will utilize the same client ID and client secret.",docs\choreo-concepts\connections.md/## Project Connections
"What are Component Connections, and what is their scope of usage?","Component Connections are Connections defined at the component level. Their scope of usage is limited to the specific component for which they are defined, meaning they are used by only that component.",docs\choreo-concepts\connections.md/## Component Connections
Provide an example scenario where creating a Component Connection would be appropriate.,"An example scenario where a Component Connection would be appropriate is if a developer wants to connect a legacy service specifically to a given component. In this case, a Component Connection would be created for that particular integration.",docs\choreo-concepts\connections.md/## Component Connections
"How do components refer to Component Connections, and how do Component Connections manage OAuth security when a component consumes multiple Choreo services?","Components can refer to the Component Connection using the connection ID. If a component consumes more than one Choreo service, the Component Connections created to consume those Choreo services under the OAuth security scheme can share the same OAuth application by sharing the same client ID and secret between all such connections.",docs\choreo-concepts\connections.md/## Component Connections
What are the two key components of Choreo's architecture?,Choreo's architecture comprises two key components: the control plane and the data plane.,docs\choreo-concepts\data-planes.md/Data Planes
What are the primary responsibilities of the Choreo control plane?,"The control plane handles essential tasks such as administering organizations, users, and projects. In addition, it also governs the entire journey of application development, from the initial stages of creation, progressing to deployment, including measures to enforce governance and the provision for observability.",docs\choreo-concepts\data-planes.md/Data Planes
What is the nature of the Choreo control plane and what does it manage?,The Choreo control plane is a SaaS that manages all cloud data planes and private data planes.,docs\choreo-concepts\data-planes.md/Data Planes
Which diverse user personas does the Choreo control plane cater to?,"The Choreo control plane caters to diverse user personas, including CIOs, architects, and developers, as well as DevOps, site reliability engineers, and platform engineers.",docs\choreo-concepts\data-planes.md/Data Planes
What is the data plane in Choreo's architecture?,The data plane is the environment where user applications are deployed based on configurations set in the control plane.,docs\choreo-concepts\data-planes.md/Data Planes
What types of user applications can be deployed in the Choreo data plane?,"These applications can range from services and web applications to APIs, integrations, and scheduled tasks.",docs\choreo-concepts\data-planes.md/Data Planes
What characteristic defines the programming language support in the Choreo data plane?,"The applications can be written in various programming languages, allowing for a polyglot approach.",docs\choreo-concepts\data-planes.md/Data Planes
What restriction applies to traffic related to the runtime of user applications in Choreo?,"All traffic related to the runtime of user applications is restricted to the Choreo data plane, ensuring strict containment of user data within its boundaries.",docs\choreo-concepts\data-planes.md/Data Planes
What are the two distinct types of data planes featured in Choreo's architecture?,Choreo's architecture features two distinct data plane types: cloud data planes and private data planes.,docs\choreo-concepts\data-planes.md/Data Planes
Describe the characteristics of a cloud data plane in Choreo's architecture.,"A cloud data plane utilizes a multi-tenanted infrastructure model for deploying user applications, creating a shared yet secure environment for application runtime.",docs\choreo-concepts\data-planes.md/Data Planes
Describe the characteristics and benefits of a private data plane (PDP) in Choreo's architecture.,"In contrast, a private data plane (PDP) provides dedicated infrastructure for a single organization to run its user applications. This ensures an added layer of privacy and control for organizations with specific requirements.",docs\choreo-concepts\data-planes.md/Data Planes
With which major cloud providers and infrastructure types can Choreo private data planes be deployed?,"Choreo private data planes can be deployed with almost all major cloud providers, such as Azure, AWS, and GCP, and are also compatible with on-premises infrastructure.",docs\choreo-concepts\data-planes.md/Private data planes - Infrastructure
What are the essential infrastructure requirements for a private data plane?,"The essential requirements for a private data plane include upstream-compatible Kubernetes clusters, a container registry, a key vault (secret store), and a logging service or log storage.",docs\choreo-concepts\data-planes.md/Private data planes - Infrastructure
How is the Choreo PDP system set up on the Kubernetes infrastructure?,Setting up the Choreo PDP system involves using a Helm installation on the Kubernetes infrastructure.,docs\choreo-concepts\data-planes.md/Private data planes - System components
List the software components that are installed during the Helm execution for a Choreo private data plane.,"The following software components are installed during the Helm execution: Cilium CNI and service mesh, Choreo API Gateways and related components, Choreo PDP agent, Observability and logging APIs, along with observability agents, and Flux controller.",docs\choreo-concepts\data-planes.md/Private data planes - System components
"How do the software components within a Choreo private data plane receive automatic updates, including security patches and bug fixes?","All of these software components receive automatic updates, including security patches and bug fixes through the flux controller connected to the Choreo Update Management System.",docs\choreo-concepts\data-planes.md/Private data planes - System components
Why does the private data plane require communication with the Choreo control plane?,The private data plane requires communication with the Choreo control plane to manage various activities.,docs\choreo-concepts\data-planes.md/Private data planes - Connectivity with the control plane
"What is the direction of all communications from the private data plane to the control plane, and what does this imply for network configuration?","All these communications are outbound from the private data plane, ensuring that there is no need to open any specific `IP:Port` from its perspective for these interactions.",docs\choreo-concepts\data-planes.md/Private data planes - Connectivity with the control plane
What specific network configuration is necessary if an organization's network restricts all outbound traffic from the private data plane?,"If an organization's network restricts all outbound traffic, it is necessary to permit outbound traffic to the public IP range of the Choreo control plane.",docs\choreo-concepts\data-planes.md/Private data planes - Connectivity with the control plane
"Detail the inbound and outbound connections for the 'Choreo PDP agent' component, including endpoints, direction, and protocol.","For the Choreo PDP agent:
- Endpoint: Choreo control plane (CP) (mizzen server), Direction: Outbound, Protocol: WSS
- Endpoint: Kubernetes API server, Direction: Outbound (cluster internal), Protocol: HTTPS, WS",docs\choreo-concepts\data-planes.md/Private data planes - Connectivity with the control plane
"Detail the inbound and outbound connections for the 'APIM/local adaptor' component, including endpoints, direction, and protocol.","For the APIM/local adaptor:
- Endpoint: Global adaptor, Direction: Outbound, Protocol: HTTPS
- Endpoint: Azure Service Bus (CP), Direction: Outbound, Protocol: AMQP",docs\choreo-concepts\data-planes.md/Private data planes - Connectivity with the control plane
"Detail the inbound and outbound connections for the 'APIM/Enforcer' component, including endpoint, direction, and protocol.","For the APIM/Enforcer:
- Endpoint: Event hub (CP), Direction: Outbound, Protocol: AMQP",docs\choreo-concepts\data-planes.md/Private data planes - Connectivity with the control plane
"Detail the inbound and outbound connections for the 'Choreo secret resolver' component, including endpoint, direction, and protocol.","For the Choreo secret resolver:
- Endpoint: Cloud secret store, Direction: Outbound (VPC internal), Protocol: HTTPS",docs\choreo-concepts\data-planes.md/Private data planes - Connectivity with the control plane
"Detail the inbound and outbound connections for the 'Container registry' component, including endpoints, direction, and protocol.","For the Container registry:
- Endpoint: Container registry (public), Direction: Inbound, Protocol: HTTPS
- Endpoint: Container registry, Direction: Outbound (VPC internal), Protocol: HTTPS",docs\choreo-concepts\data-planes.md/Private data planes - Connectivity with the control plane
"Detail the inbound and outbound connections for the 'Certificate manager' component, including endpoints, direction, and protocol.","For the Certificate manager:
- Endpoint: Azure DNS service, Direction: Outbound, Protocol: HTTPS
- Endpoint: LetsEncrypt, Direction: Outbound, Protocol: HTTPS",docs\choreo-concepts\data-planes.md/Private data planes - Connectivity with the control plane
"Detail the inbound and outbound connections for the 'Flux source controller' component, including endpoint, direction, and protocol.","For the Flux source controller:
- Endpoint: GitHub, Direction: Outbound, Protocol: HTTPS",docs\choreo-concepts\data-planes.md/Private data planes - Connectivity with the control plane
"Detail the inbound and outbound connections for the 'Flux Helm controller' component, including endpoint, direction, and protocol.","For the Flux Helm controller:
- Endpoint: Choreo container registry, Direction: Outbound, Protocol: HTTPS",docs\choreo-concepts\data-planes.md/Private data planes - Connectivity with the control plane
How is all communication between the control plane and the private data plane secured?,All communication between the control plane and the private data plane is secured using TLS.,docs\choreo-concepts\data-planes.md/Private data planes - Connectivity with the control plane
What is the central commitment of the private data plane observability architecture?,The private data plane observability architecture is centered around a strong commitment to data privacy and compliance.,docs\choreo-concepts\data-planes.md/Private data planes - Observability architecture
How is data privacy and compliance achieved in the private data plane observability architecture?,This is achieved through a strategic decision to retain logs and observability data within the data planes itself.,docs\choreo-concepts\data-planes.md/Private data planes - Observability architecture
"Explain the ""Data storage at source"" aspect of the private data plane observability architecture.","Logs and observability data are stored within the data plane itself, enhancing security, simplifying access, and ensuring compliance.",docs\choreo-concepts\data-planes.md/Private data planes - Observability architecture
"Explain the ""Direct browser-to-data-plane interaction"" aspect of the private data plane observability architecture.","The Choreo Console in the user's browser directly interacts with APIs in the data plane, reducing potential data routing complexities and ensuring a more secure, direct flow of information.",docs\choreo-concepts\data-planes.md/Private data planes - Observability architecture
"Explain how the ""Reduced data exposure points"" aspect is achieved in the private data plane observability architecture.","Fetching data directly from the data plane's APIs minimizes the number of data transfer points, effectively decreasing the chances of data exposure or interception.",docs\choreo-concepts\data-planes.md/Private data planes - Observability architecture
"How does the private data plane observability architecture support ""Compliance with regulatory standards""?","The architecture supports data locality, aligning with global regulatory standards like GDPR and CCPA by keeping data in its original environment.",docs\choreo-concepts\data-planes.md/Private data planes - Observability architecture
"How does the private data plane observability architecture provide ""Improved performance and real-time insights""?","Direct interaction between the browser and data plane results in faster data retrieval, providing users with immediate insights.",docs\choreo-concepts\data-planes.md/Private data planes - Observability architecture
"How does the private data plane observability architecture ensure ""User transparency and control""?","Users have a clear view of their data's location and access methods, alongside granular control over data access.",docs\choreo-concepts\data-planes.md/Private data planes - Observability architecture
What kind of security does the Choreo private data plane ensure?,"The Choreo private data plane ensures extensive, production-grade security, ranging from infrastructure and architecture to zero-trust network security.",docs\choreo-concepts\data-planes.md/Private data planes - Security
How is all incoming traffic protected in the Choreo private data plane?,All incoming traffic is protected by a firewall and must undergo authentication and authorization via the API Gateway.,docs\choreo-concepts\data-planes.md/Private data planes - Security
How does the Choreo private data plane ensure end-to-end network traffic encryption?,"It provides end-to-end network traffic encryption using Cilium transparent encryption, ensuring efficient data path encryption.",docs\choreo-concepts\data-planes.md/Private data planes - Security
Where can one find more detailed information about the private data plane security levels supported in Choreo pricing plans?,"For details on the private data plane security levels supported in Choreo pricing plans, one can refer to the ""Private Data Plane Security Levels"" documentation.",docs\choreo-concepts\data-planes.md/Private data planes - Security
What are the management models supported by Choreo for private data planes (PDPs)?,"Choreo supports the following management models for private data planes (PDPs): WSO2 fully managed (infrastructure and PDP in WSO2 subscription) model, WSO2 fully managed (infrastructure and PDP in customer subscription) model, and Customer self-managed (WSO2 provides installation script and updates) model.",docs\choreo-concepts\data-planes.md/Private data planes - Management models
Where can one find detailed information about each private data plane management model to make informed decisions?,"To explore each management model in detail so that one can make informed decisions depending on the supported cloud-based operations and security, one can refer to the ""Private Data Plane Management Models"" documentation.",docs\choreo-concepts\data-planes.md/Private data planes - Management models
What are Deployment Tracks in Choreo and what is their primary purpose?,"Deployment Tracks in Choreo are structured pathways designed for simplified software component deployment. They function as advanced CI/CD pipelines, ensuring that components reach their intended destinations seamlessly, regardless of whether they originate from source code or prebuilt images. Their primary purpose is to establish an organized and structured approach that minimizes the chances of errors and challenges typically associated with deployment workflows.",docs\choreo-concepts\deployment-tracks.md/Deployment Tracks
What two critical challenges do Deployment Tracks address to enhance the API consumer experience?,Deployment Tracks offer practical solutions to enhance the API consumer experience by addressing two critical challenges: Streamlined deployment and Efficient API versioning.,docs\choreo-concepts\deployment-tracks.md/The significance of Deployment Tracks
How do Deployment Tracks contribute to 'Streamlined deployment'?,"For 'Streamlined deployment', Deployment Tracks serve as well-designed routes for software components, enhancing the organization and reliability of the deployment process, similar to a well-structured express route.",docs\choreo-concepts\deployment-tracks.md/The significance of Deployment Tracks
"How do Deployment Tracks facilitate 'Efficient API versioning', especially for managed APIs?","For 'Efficient API versioning', especially beneficial for managed APIs, Deployment Tracks provide a straightforward method for creating API versions that seamlessly interact with previous iterations. This simplified version management benefits both API creators and consumers alike.",docs\choreo-concepts\deployment-tracks.md/The significance of Deployment Tracks
What two integral approaches does Choreo leverage for streamlined deployments using Deployment Tracks?,"For streamlined deployments, Choreo dissects two integral approaches that leverage Deployment Tracks: the comprehensive CI/CD integration and the focused CD-Only strategy.",docs\choreo-concepts\deployment-tracks.md/Streamlined deployments
"In the 'CI/CD with Deployment Tracks' approach, how is a deployment track linked, and what is the benefit of this connection?","In the 'CI/CD with Deployment Tracks' approach, a deployment track is linked to a particular branch within a GitHub repository. This connection is useful for handling deployments to various environments.",docs\choreo-concepts\deployment-tracks.md/CI/CD with Deployment Tracks
Where can users visualize deployments to specific environments associated with their selected deployment track in Choreo?,"On Choreo's Deploy page, users can easily visualize the deployments to specific environments associated with their selected deployment track.",docs\choreo-concepts\deployment-tracks.md/CI/CD with Deployment Tracks
"What functionality does the deployment track have regarding automatic deployments in the CI/CD approach, and what action triggers a deployment to the development environment when activated?","The deployment track has a functionality that initiates automatic deployments for the linked branch. When activated, merging a pull request (PR) triggers a deployment to the development environment.",docs\choreo-concepts\deployment-tracks.md/CI/CD with Deployment Tracks
Under what circumstances would a user opt for the 'CD-Only strategy with Deployment Tracks'?,A user would opt for the 'CD-Only strategy with Deployment Tracks' if they are inclined to use their own Continuous Integration (CI) systems and want to harness the deployment track solely as a Continuous Deployment (CD) pipeline.,docs\choreo-concepts\deployment-tracks.md/CD-Only strategy with Deployment Tracks
"How are deployment tracks linked in the 'CD-Only strategy', and what capability does this configuration empower users to have?","In the 'CD-Only strategy', deployment tracks can be seamlessly linked to a container registry repository. This configuration empowers users to effortlessly deploy images sourced directly from the linked container registry repository.",docs\choreo-concepts\deployment-tracks.md/CD-Only strategy with Deployment Tracks
To which specific component type does the 'Efficient API versioning' section apply in Choreo?,The 'Efficient API versioning' section applies only to service components in Choreo.,docs\choreo-concepts\deployment-tracks.md/Efficient API versioning
"What versioning mechanism does Choreo follow for APIs, and how does it represent API versions with an example?","Choreo follows a versioning mechanism based on Semantic Versioning (SemVer) but only includes the major version and minor version with the prefix `v`. For example, `v1.2`.",docs\choreo-concepts\deployment-tracks.md/Efficient API versioning
"According to Choreo's approach, when should the major version and minor version of an API be incremented?","According to Choreo's approach: the major version should be incremented when incompatible API changes are made, and the minor version should be incremented when functionality is added in a backward-compatible manner.",docs\choreo-concepts\deployment-tracks.md/Efficient API versioning
What is Semantic Versioning (SemVer)?,"Semantic Versioning (SemVer) is a specification that defines how to assign and increment version numbers for software products, including APIs. For more information, users can refer to the Semantic Versioning specification.",docs\choreo-concepts\deployment-tracks.md/Efficient API versioning
"What is a primary concern when dealing with SaaS APIs regarding updates, and how are patch updates categorized in compliance with SemVer?","One of the primary concerns when dealing with SaaS APIs is to minimize disruption for API consumers while continuously developing and deploying updates. In compliance with SemVer, changes that don't introduce breaking or additive modifications to the API are categorized as patch updates.",docs\choreo-concepts\deployment-tracks.md/Efficient API versioning
"From the perspective of API consumers, how should patch updates ideally affect their API clients, and what are they typically most concerned with?","From the perspective of API consumers, patch updates should ideally not disrupt their API clients. Typically, API consumers are most concerned with major API version alterations, though there might be instances where minor version changes are communicated to them.",docs\choreo-concepts\deployment-tracks.md/Efficient API versioning
"In the context of deployment tracks, what information do API developers need to specify for API versioning, and what is this information treated as?","In the context of deployment tracks, API developers only need to specify the major and minor versions being delivered from a particular deployment track. This information is treated as the API version attribute of a deployment track.",docs\choreo-concepts\deployment-tracks.md/Efficient API versioning
"How can publishers achieve versioning for internal tracking purposes if they require it, outside of the API version attribute of a deployment track?","If the publisher requires versioning for internal tracking purposes, this can be accomplished in Git through the use of Git tags, on GitHub with GitHub releases, and so forth.",docs\choreo-concepts\deployment-tracks.md/Efficient API versioning
What is an Endpoint?,An Endpoint is defined as a network-exposed function that resides within a component.,docs\choreo-concepts\endpoint.md/# Endpoint
Which types of components in Choreo expose endpoints?,"In Choreo, service components and integration components are the types that expose one or more endpoints.",docs\choreo-concepts\endpoint.md/# Endpoint
What is the role of a service contract in relation to an endpoint?,"A service contract is associated with an endpoint to expose it to consumers. This contract provides the necessary specification (e.g., OpenAPI, GraphQL SDL) for consumers to interact with the endpoint.",docs\choreo-concepts\endpoint.md/# Endpoint
What are the specific types of service contracts mentioned that can be associated with an endpoint?,The specific types of service contracts that can be associated with an endpoint are OpenAPI and GraphQL SDL.,docs\choreo-concepts\endpoint.md/# Endpoint
What is the default contract Choreo uses to expose a service or integration if no explicit service contract is provided for an endpoint?,"In the absence of an explicit service contract, Choreo uses `/* exposed on all HTTP verbs` as the default contract to expose the service or the integration.",docs\choreo-concepts\endpoint.md/# Endpoint
How does Choreo treat each exposed endpoint in a component concerning API management?,Choreo considers each endpoint exposed in a component as a single API. This allows for API management to be performed on a per-endpoint basis for a given component.,docs\choreo-concepts\endpoint.md/# Endpoint
What specific API management capabilities are available per endpoint in Choreo?,"Choreo allows for API management per endpoint, enabling capabilities such as performing lifecycle management and configuring security settings for each individual endpoint within a given component.",docs\choreo-concepts\endpoint.md/# Endpoint
Where can one find further information on configuring endpoints when developing components in Choreo?,"To learn how to configure endpoints when developing components in Choreo, one can refer to the documentation titled ""[Configure Endpoints](../develop-components/configure-endpoints.md)"".",docs\choreo-concepts\endpoint.md/# Endpoint
What do environments in Choreo offer developers?,Choreo offers developers one or more environments to run their applications within a given data plane.,docs\choreo-concepts\environments.md/Environments
Which environments does the Choreo cloud data plane provide by default?,"By default, the Choreo cloud data plane provides two environments: development and production.",docs\choreo-concepts\environments.md/Environments
How are projects in Choreo associated with environments?,Each project in Choreo is associated with one or more environments available in the organization.,docs\choreo-concepts\environments.md/Environments
Can different projects in Choreo utilize different sets of environments? Provide an example from the text.,"Yes, different projects in Choreo can utilize different sets of environments. For example, project A may choose to utilize dev, staging, and production environments, while project B may only use development and production environments.",docs\choreo-concepts\environments.md/Environments
What action can be performed on components within a project concerning environments?,You can promote components within a project across available environments.,docs\choreo-concepts\environments.md/Environments
What happens to a component's configuration values when it is promoted across environments?,"When a component is promoted across environments, its configuration values can be overridden with environment-specific values.",docs\choreo-concepts\environments.md/Environments
What is the purpose of the diagram mentioned in the documentation?,The diagram illustrates how a component is promoted across environments.,docs\choreo-concepts\environments.md/Environments
"What is an organization in Choreo, and what are the initial requirements for a first-time user regarding organizations?","An organization in Choreo is defined as a logical grouping of users and user resources. For a first-time user, it is mandatory to create an organization and become a member of it when signing in to Choreo.",docs\choreo-concepts\organization.md/# Organization
Can users and resources from one organization access resources in another organization in Choreo?,"No, users and resources in one organization cannot access resources in another organization unless an admin of the other organization explicitly invites them and adds them as a member of that organization.",docs\choreo-concepts\organization.md/# Organization
Is a user allowed to create multiple organizations in Choreo?,"No, a user cannot create more than one organization in Choreo.",docs\choreo-concepts\organization.md/# Organization
"Under what circumstances can a user switch between organizations in Choreo, and how is this action performed?","A user can switch from one organization to another if they are a member of more than one organization. To perform this action, the user needs to select the required organization from the 'Organization' list located in the Choreo Console header.",docs\choreo-concepts\organization.md/## Switch organizations
How does Choreo manage user permissions?,Choreo manages user permissions using a system of groups and roles.,docs\choreo-concepts\organization.md/## Manage user permission
"What is a group in Choreo, and how do users within a group inherit permissions? Provide an example.","A group in Choreo is a collection of users, with each user having one or more roles assigned to them. Users who are part of a group automatically inherit the permissions associated with the roles assigned to that specific group. For example, if a user is added to the `API Publisher` group, they will automatically receive the `API Publisher` role.",docs\choreo-concepts\organization.md/### Groups
List the predefined groups available in Choreo and their corresponding roles.,"Choreo comes with several predefined groups, each configured with specific roles:
- **API Publisher**: A collection of users who have the API Publisher role.
- **API Subscriber**: A collection of users who have the API Subscriber role.
- **Admin**: A collection of users who have the Admin role.
- **Billing Admin**: A collection of users who have the Billing Admin role.
- **Choreo DevOps**: A collection of users who have the Choreo DevOps role.
- **Developer**: Users who develop, deploy, and manage cloud native applications at scale.
- **External API Subscriber**: A collection of users who have the External API Subscriber role.",docs\choreo-concepts\organization.md/### Groups
What is an important consideration when creating a new group for inviting members in Choreo?,"When creating a new group to invite members, it is important to assign a role to the group. This ensures that users added to the group will have the necessary permissions.",docs\choreo-concepts\organization.md/### Groups
Describe the responsibilities and permissions of the 'Admin' role in Choreo.,"The 'Admin' role in Choreo performs all administrative tasks. This includes user management, Developer Portal customization, project management, analytics configuration, and domain management.",docs\choreo-concepts\organization.md/### Roles
What are the key responsibilities of the 'API Publisher' role in Choreo?,"The 'API Publisher' role in Choreo is responsible for discovering, creating, publishing, deleting, testing, and managing APIs.",docs\choreo-concepts\organization.md/### Roles
What tasks can an 'API Subscriber' perform in Choreo?,"An 'API Subscriber' in Choreo can subscribe to APIs, manage subscriptions and applications, and generate and manage API keys.",docs\choreo-concepts\organization.md/### Roles
What are the duties of the 'Billing Admin' role in Choreo?,"The 'Billing Admin' role in Choreo handles billing administration. This includes viewing tiers, managing organizations and invoices, and managing subscriptions and payment methods.",docs\choreo-concepts\organization.md/### Roles
What is the primary function of the 'Choreo DevOps' role?,"The 'Choreo DevOps' role is responsible for managing the deployment, monitoring, and reliability of components within Choreo.",docs\choreo-concepts\organization.md/### Roles
What are the responsibilities of the 'Choreo Platform Engineer' role?,"The 'Choreo Platform Engineer' role performs infrastructure, governance, service mesh, and monitoring tasks.",docs\choreo-concepts\organization.md/### Roles
What is the scope of work for a 'Developer' in Choreo?,"A 'Developer' in Choreo develops, deploys, and manages cloud-native applications at scale.",docs\choreo-concepts\organization.md/### Roles
What are the capabilities of an 'External API Subscriber'?,An 'External API Subscriber' can consume APIs with Developer Portal access and has the ability to join an organization exclusively for API usage.,docs\choreo-concepts\organization.md/### Roles
"Which role in Choreo is deprecated, and what was its previous function?",The 'Environment Manager' role is deprecated. It was previously responsible for managing deployment environments.,docs\choreo-concepts\organization.md/### Roles
What is the current status and relationship between the 'Choreo DevOps' and 'Choreo Platform Engineer' roles?,"The 'Choreo DevOps' role has been replaced by the 'Choreo Platform Engineer' role. However, organizations that previously had the 'Choreo DevOps' role will continue to see and use both roles with their existing functionality.",docs\choreo-concepts\organization.md/### Roles
"What is the purpose of the Organization ID in Choreo, and what are the steps to obtain it?","The Organization ID serves as a unique identifier for each organization. To obtain the Organization ID, follow these steps:
1. Go to `https://console.choreo.dev/` and sign in. This will open the project home page.
2. Click on the 'Organization' list in the header and select your organization.
3. In the left navigation, click 'Settings'.
4. In the header, click the 'Organization' list. This action will open the organization level settings page.
5. Under 'Organization', click 'Copy ID'.",docs\choreo-concepts\organization.md/## Organization ID
"What is the Organization Handle in Choreo, and what are the steps to retrieve it?","The organization handle is a unique string that directly corresponds to your organization's name. To retrieve the organization handle, follow these steps:
1. Go to `https://console.choreo.dev/` and sign in. This will open the project home page.
2. Click on the 'Organization' list in the header and select your organization.
3. In the left navigation, click 'Settings'.
4. Under 'Organization', click 'Copy Handle'.",docs\choreo-concepts\organization.md/## Organization Handle
What is the fundamental definition of a project in Choreo?,A project in Choreo is defined as a logical group of related components that typically represent a single cloud native application.,docs\choreo-concepts\project.md/# Project
What is the typical composition of a project in Choreo?,A project in Choreo consists of one or more components.,docs\choreo-concepts\project.md/# Project
"How are components within a Choreo project ideally organized in relation to GitHub repositories, and what is this architectural pattern known as?","Ideally, all components within a project can be (though not strictly restricted to) located in a single GitHub repository under different paths. This architectural pattern is known as the monorepo architecture.",docs\choreo-concepts\project.md/# Project
Describe the deployment behavior of components within a Choreo project concerning Kubernetes clusters.,"At deployment time, all components within a given project are deployed into a single namespace of the Kubernetes cluster.",docs\choreo-concepts\project.md/# Project
What are the various options for exposing components within a Choreo project?,"Components within a project can be exposed in three ways: to the public internet, internally to the rest of the organization, or privately within the project only.",docs\choreo-concepts\project.md/# Project
"How is a project in Choreo represented in the context of architectural patterns, specifically referencing a known architecture?",A project in Choreo is represented as a cell with regard to the Cell-based architecture. The documentation provides a link to the WSO2 reference architecture for more details on this concept.,docs\choreo-concepts\project.md/# Project
What does the provided diagram illustrate concerning a project in Choreo?,The provided diagram illustrates a project and specifically shows how the components within that project are laid out at runtime.,docs\choreo-concepts\project.md/# Project
What is the relationship between data planes and organizations in Choreo?,Data planes are connected to the organization.,docs\choreo-concepts\resource-hierarchy.md/## Organizations and data planes
For which projects are data planes available within an organization in Choreo?,Data planes are available for all projects within the organization.,docs\choreo-concepts\resource-hierarchy.md/## Organizations and data planes
What happens when an environment is created in a project concerning data planes and Kubernetes namespaces?,"When you create an environment in a project, the data plane connected to the organization is linked with an automatically generated Kubernetes namespace.",docs\choreo-concepts\resource-hierarchy.md/## Organizations and data planes
How many Kubernetes clusters can be associated with an environment in Choreo?,Choreo allows multiple Kubernetes clusters to be associated with an environment.,docs\choreo-concepts\resource-hierarchy.md/## Environments and data planes
What are the benefits of associating multiple Kubernetes clusters with an environment in Choreo?,Associating multiple Kubernetes clusters with an environment enables you to build highly resilient and resource-efficient solutions that utilize multiple clusters.,docs\choreo-concepts\resource-hierarchy.md/## Environments and data planes
How does Choreo facilitate multi-cluster deployment within an environment?,"Choreo synchronizes your applications and workloads between associated clusters in an environment, allowing you to perform multi-cluster deployment with a single click.",docs\choreo-concepts\resource-hierarchy.md/## Environments and data planes
Is it mandatory to use a different Kubernetes cluster for each environment in Choreo?,"No, it is not necessary to use a different cluster per environment.",docs\choreo-concepts\resource-hierarchy.md/## Environments and data planes
Can multiple environments be created on the same Kubernetes cluster in Choreo?,"Yes, you can create multiple environments on the same cluster.",docs\choreo-concepts\resource-hierarchy.md/## Environments and data planes
"What does the diagram 'Environments and dataplanes' illustrate, and what is its nature?","The diagram 'Environments and dataplanes' illustrates how multiple clusters associate with different environments. It is presented as an example of a specific solution, implying that actual application architectures may require different configurations.",docs\choreo-concepts\resource-hierarchy.md/## Environments and data planes
To what do components belong in Choreo?,Components belong to a project in Choreo.,docs\choreo-concepts\resource-hierarchy.md/## Components and environments
How are environments provisioned in relation to projects in Choreo?,Environments are provisioned per project.,docs\choreo-concepts\resource-hierarchy.md/## Components and environments
How is a component deployed when it is deployed in Choreo?,"When a component is deployed, it is deployed as a container to the specified environment.",docs\choreo-concepts\resource-hierarchy.md/## Components and environments
What action can be performed with a container image once it has been deployed to an environment in Choreo?,"Once deployed, you can promote the container image across the environments available in the project.",docs\choreo-concepts\resource-hierarchy.md/## Components and environments
