question,answer,source
What is the primary purpose of the Choreo Marketplace?,The Choreo Marketplace primarily promotes and facilitates the reuse and sharing of services. It enables users to share all services deployed within Choreo and allows others to easily browse and search for available services.,docs\choreo-concepts\choreo-marketplace.md/Choreo Marketplace
What types of content can users find and refer to within the Choreo Marketplace for available services?,"Within the Choreo Marketplace, users can find and refer to service definitions, documentation, and instructions on how to use the available services.",docs\choreo-concepts\choreo-marketplace.md/Choreo Marketplace
Why is effective discoverability desirable in the Choreo Marketplace?,"Effective discoverability is desirable in the Choreo Marketplace because it includes all services deployed in an organization, which can be a large number of services. This ensures users can efficiently find the services they need.",docs\choreo-concepts\choreo-marketplace.md/Discover services
What are the two primary methods available for users to explore services in the Choreo Marketplace?,The two primary methods available for users to explore services in the Choreo Marketplace are using the search bar or applying various filter criteria.,docs\choreo-concepts\choreo-marketplace.md/Discover services
Where is the search bar located in the Choreo Marketplace interface?,"The search bar in the Choreo Marketplace interface is located at the top, providing universal searching capabilities.",docs\choreo-concepts\choreo-marketplace.md/Search
What are the specific search attributes that the top search bar in the Choreo Marketplace allows users to search for text within?,"The top search bar in the Choreo Marketplace allows users to search for text within the following specific search attributes: 'Name' (the service name), 'Label' (the service labels), 'Content' (the service content including overview, summary, and documentation), and 'All' (encompassing all the aforementioned criteria).",docs\choreo-concepts\choreo-marketplace.md/Search
What does the 'All' search attribute encompass when searching for services in the Choreo Marketplace?,"When searching for services in the Choreo Marketplace, the 'All' search attribute encompasses the service name, service labels, and service content (overview, summary, and documentation).",docs\choreo-concepts\choreo-marketplace.md/Search
How is the filtering capability provided in the Choreo Marketplace?,The filtering capability in the Choreo Marketplace is provided through a left-hand side filter panel.,docs\choreo-concepts\choreo-marketplace.md/Filter
"What are the two available options for the 'Type' filter attribute in the Choreo Marketplace, and what do they represent?","The two available options for the 'Type' filter attribute in the Choreo Marketplace are 'Internal' and 'Third-party'. 'Internal' refers to services deployed within Choreo, while 'Third-party' refers to services running externally to Choreo but independently added to the Marketplace.",docs\choreo-concepts\choreo-marketplace.md/Filter
"What are the three choices for the 'Network Visibility' filter attribute in the Choreo Marketplace, and what level of exposure does each choice represent?","The three choices for the 'Network Visibility' filter attribute in the Choreo Marketplace are 'Public,' 'Organization,' and 'Project.' 'Public' filters services exposed publicly, 'Organization' represents services exposed across the entire organization, and 'Project' represents services exposed at the project level.",docs\choreo-concepts\choreo-marketplace.md/Filter
How can a user access the detailed view of a service in the Choreo Marketplace?,A user can access the detailed view of a service in the Choreo Marketplace by clicking on the service card.,docs\choreo-concepts\choreo-marketplace.md/Explore a service
What information is featured in the header of a detailed service page in the Choreo Marketplace?,"The header of a detailed service page in the Choreo Marketplace features the service name, summary, version, labels, and service icon.",docs\choreo-concepts\choreo-marketplace.md/Explore a service
"How does Choreo organize the content of a service's detailed view, and what are the four main tabs?","Choreo organizes the content of a service's detailed view into four tabs. The four main tabs are 'Overview,' 'API definition,' 'How to use,' and 'Related documents.'",docs\choreo-concepts\choreo-marketplace.md/Explore a service
"What kind of information is displayed in the 'Overview' tab of a service's detailed view in the Choreo Marketplace, and when is this section disabled?",The 'Overview' tab of a service's detailed view in the Choreo Marketplace displays the service overview provided by the service developer. This section will be disabled if the service developer has not provided any content at service creation.,docs\choreo-concepts\choreo-marketplace.md/Explore a service
How can a service developer provide or update the overview content for a service in the Choreo Marketplace?,A service developer can provide or update the overview content for a service in the Choreo Marketplace via the 'Manage â†’ Marketplace' section of the component.,docs\choreo-concepts\choreo-marketplace.md/Explore a service
"What information is included in the 'API definition' tab of a service's detailed view in the Choreo Marketplace, and where is this definition extracted from?","The 'API definition' tab of a service's detailed view in the Choreo Marketplace includes the API definition for the service, which is extracted from the `component.yaml` file in the user repository.",docs\choreo-concepts\choreo-marketplace.md/Explore a service
What happens if an API definition is not provided for a service in the Choreo Marketplace?,"If an API definition is not provided for a service in the Choreo Marketplace, the 'API definition' tab will be empty.",docs\choreo-concepts\choreo-marketplace.md/Explore a service
What kind of instructions are included in the 'How to use' tab of a service's detailed view in the Choreo Marketplace?,"The 'How to use' tab of a service's detailed view in the Choreo Marketplace includes instructions on how to use the selected service, including instructions on creating a connection.",docs\choreo-concepts\choreo-marketplace.md/Explore a service
"What information is included in the 'Related documents' tab of a service's detailed view in the Choreo Marketplace, and how is this content provided?",The 'Related documents' tab of a service's detailed view in the Choreo Marketplace includes any additional content the user has provided as documents through the 'Manage -> Marketplace' section of the component.,docs\choreo-concepts\choreo-marketplace.md/Explore a service
What is the general method for adding services to the Choreo Marketplace?,Services can be added to the Choreo Marketplace as Choreo services.,docs\choreo-concepts\choreo-marketplace.md/Add a service to the Choreo Marketplace
"How is a service exposed through the Choreo platform termed, and how is it identifiable?","A service exposed through the Choreo platform is termed a Choreo service, and each such service is identifiable by an endpoint within a Choreo service component.",docs\choreo-concepts\choreo-marketplace.md/Add a Choreo service
When do services automatically get added to the Choreo Marketplace?,Services automatically get added to the Choreo Marketplace upon deployment to the initial environment.,docs\choreo-concepts\choreo-marketplace.md/Add a Choreo service
What essential details does Choreo automatically collect during deployment to generate service entries in the Marketplace?,"During deployment, Choreo effortlessly collects essential details such as the component name, endpoint name, description, and service definitions, utilizing them to generate the corresponding service entries in the Marketplace.",docs\choreo-concepts\choreo-marketplace.md/Add a Choreo service
"What is the naming convention for a service in the Choreo Marketplace, and what happens to other details?","The service name in the Choreo Marketplace follows the convention of `component name - endpoint name`, while all other details collected during deployment remain unchanged.",docs\choreo-concepts\choreo-marketplace.md/Add a Choreo service
How are service versions displayed in the Choreo Marketplace?,"In the Choreo Marketplace, service versions are displayed in their major version format.",docs\choreo-concepts\choreo-marketplace.md/Service versioning in the Choreo Marketplace
What does each service entry in the Choreo Marketplace represent regarding its version?,"Each service in the Choreo Marketplace represents the latest version of the service within its major version, following semantic versioning principles. For example, if versions v1.0, v1.1, v1.2, and v2.0 exist, the Marketplace displays v1 (representing v1.2) and v2 (representing v2.0).",docs\choreo-concepts\choreo-marketplace.md/Service versioning in the Choreo Marketplace
What happens to a service entry in the Choreo Marketplace when a new minor version of an already deployed service is released?,"When a new minor version of a service already deployed in Choreo is released, the corresponding service in the Marketplace automatically updates to reflect the latest version within the same major version.",docs\choreo-concepts\choreo-marketplace.md/Service versioning in the Choreo Marketplace
What is the benefit of using a service from the Choreo Marketplace as a dependency regarding traffic routing?,"When a service from the Choreo Marketplace is used as a dependency, the dependent service's traffic automatically routes to the latest version of the corresponding service within the same major version. This ensures dependencies remain up-to-date without requiring manual updates within a major version.",docs\choreo-concepts\choreo-marketplace.md/Semantic-version-based intelligent routing in the Choreo Marketplace
Provide an example to illustrate how semantic-version-based intelligent routing works when a dependent service connects to a Choreo Marketplace service.,"For example, if a Choreo component named `Foo` connects to a Choreo service named `Bar` (available as version v1 in the Marketplace), and the latest v1 version of `Bar` is v1.2, `Foo` will automatically connect to `Bar` v1.2. Subsequently, if `Bar` releases version v1.3, traffic from `Foo` will automatically route to `Bar` v1.3.",docs\choreo-concepts\choreo-marketplace.md/Semantic-version-based intelligent routing in the Choreo Marketplace
What aspects of a service in the Choreo Marketplace are automatically updated during redeployment to any environment?,"During redeployment to any environment, Choreo automatically updates service definitions, visibility, and descriptions for services in the Choreo Marketplace.",docs\choreo-concepts\choreo-marketplace.md/Edit services in the Choreo Marketplace
What is the primary purpose of Choreo's CI/CD experience?,Choreo provides a streamlined continuous integration and continuous deployment (CI/CD) experience designed to efficiently deploy applications and services across multiple environments.,docs\choreo-concepts\ci-cd.md/CI/CD
"How does Choreo organize environments for projects, and what are the characteristics of these environments?","Choreo creates environments for each project, where all components within the project share these environments. An environment is an isolated deployment area with restricted network and resource access. Services deployed in one environment cannot communicate with services deployed in another.",docs\choreo-concepts\ci-cd.md/CI/CD
"What are the default environments provided by the Choreo cloud data plane, and how can environments be customized in a private data plane organization?","The Choreo cloud data plane provides two default environments: development and production. However, if you are in a private data plane organization, you have the flexibility to customize and create multiple environments based on your specific requirements.",docs\choreo-concepts\ci-cd.md/CI/CD
"Explain Choreo's 'build once, deploy many' strategy for managing components across multiple environments.","Choreo adopts a 'build once, deploy many' strategy, meaning an application is built only once (either per commit if automatic build on commit is enabled, or based on a selected commit during a manual build). After the initial build, it is then promoted to subsequent environments. This strategy allows for testing changes in lower, non-production environments like development before promoting the build to production.",docs\choreo-concepts\ci-cd.md/CI/CD
How does Choreo handle configurations and secrets in relation to source code and environments?,"Choreo injects configurations and secrets, which are maintained at the environment level, into components at runtime. This approach ensures a strict separation of environment-specific configurations from the source code. Although configurations can vary across environments, the underlying code and the built container remain unchanged.",docs\choreo-concepts\ci-cd.md/CI/CD
What types of configurations and secrets can be injected into components at runtime in Choreo?,"Configurations and secrets that can be injected include resource credentials for databases, caches, or other backing services, as well as credentials for external cloud services like Amazon S3 or external APIs.",docs\choreo-concepts\ci-cd.md/CI/CD
"How are configurations and secrets secured in Choreo, and where can they be stored in a private data plane organization?","All configurations and secrets are encrypted at rest and in transit and are stored in a secure vault. In a private data plane organization, you have the option to store configurations and secrets within your own infrastructure.",docs\choreo-concepts\ci-cd.md/CI/CD
Describe the general steps involved in Choreo's auto-generated build pipelines.,"Generally, Choreo's auto-generated build pipelines, which may slightly differ by component type, perform the following steps: they build a container image from either the provided source code or a given Dockerfile for a specific commit; run security and vulnerability scans if applicable; push the container image to a container registry (Choreo-managed in the cloud data plane, user-owned in a private data plane organization); and update service endpoints and API specifications from the provided repository if applicable.",docs\choreo-concepts\ci-cd.md/Build
"Can unit tests be integrated into Choreo's build pipeline, and where can more details be found?","Yes, some buildpacks in Choreo support integrating unit tests into the build pipeline. More details can be found in the documentation section titled 'Integrate Unit Tests into the Build Pipeline'.",docs\choreo-concepts\ci-cd.md/Build
"What does 'repeatable builds' mean in Choreo, and what is the policy regarding multiple builds from the same code version?","Repeatable builds in Choreo mean that the system can replicate builds from an identical code version (Git commit), resulting in Docker images with the same behavior. In the event of multiple builds from the same code version, Choreo preserves only the most recent version of the Docker image created from that particular code version.",docs\choreo-concepts\ci-cd.md/Build
"How can a user manually trigger a build in Choreo, and what additional option is available for Admin and Choreo DevOps users?","To manually trigger a build, a user can go to the 'Build' page and click 'Build Latest'. If necessary, they also have the option to select a particular commit and build an image from it. Admin and Choreo DevOps users have an additional option to trigger builds using specific tags from the connected Git repository, though this action bypasses the standard branch-based deployment process and should only be used for critical, time-sensitive scenarios as it can disrupt deployment track integrity.",docs\choreo-concepts\ci-cd.md/Build
How can a user configure Choreo to automatically trigger a build?,"To automatically trigger a build with each commit, a user can enable the 'Auto Build on Commit' setting.",docs\choreo-concepts\ci-cd.md/Build
Where can users view build logs and access detailed information for specific builds in Choreo?,"Users can view build logs for specific builds on the 'Build' page. To view details of a specific build, they need to click 'View Details' corresponding to that particular build.",docs\choreo-concepts\ci-cd.md/Build
What are the two main approaches for deploying an image in Choreo once it has been built?,"Once an image is built in Choreo, it can be deployed via the 'Deploy' page using one of two approaches: either manually by going to the 'Set Up' card and clicking 'Deploy', or automatically by enabling 'Auto Deploy on Build' on the 'Set Up' card, which initiates deployment upon the completion of an automatic build.",docs\choreo-concepts\ci-cd.md/Deployment
"What is a prerequisite for enabling 'Auto Deploy on Build' in Choreo, and why is it necessary?","To enable 'Auto Deploy on Build', 'Auto Build on Commit' must be enabled. This is because automatic deployment is not necessary or useful in scenarios where automatic build is not enabled.",docs\choreo-concepts\ci-cd.md/Deployment
What special consideration applies to the first build of a Ballerina component regarding deployment and configurations?,"For a Ballerina component, the first build must be triggered manually to ensure that Choreo applies the required configurations to the development environment. Automatic builds can be enabled subsequently after this initial manual build.",docs\choreo-concepts\ci-cd.md/Deployment
"How does Choreo handle configurable values for Ballerina components during deployment, and what is the implication if configurables are changed?","Choreo automatically checks the configurable values defined in a Ballerina component's source code against the configurable values applied in an environment. Choreo requests these configurable values on deployment and promotion. If the configurables in a Ballerina component have been changed, auto-build pipelines can fail as a precaution to avoid a component crash at runtime due to missing configurables.",docs\choreo-concepts\ci-cd.md/Deployment
What are the responsibilities of a user when managing configurations for Dockerfile-based components in Choreo?,"For Dockerfile-based components, users must manually manage and update the configurations and secrets in environments ahead of time. Additionally, they must ensure backward compatibility between at least one release if they change the configurations.",docs\choreo-concepts\ci-cd.md/Deployment
"What is the 'setup area' in Choreo's deploy phase, and what is its role in the initial deployment?","In the deploy phase, Choreo uses a 'setup area' to merge the Docker image with its environment-independent configurations. This composite (the merged image and configurations) is then deployed to the environment, which is known as the initial deployment.",docs\choreo-concepts\ci-cd.md/Deployment
"What does it mean for deployments to be 'immutable' in Choreo, and what happens if configurations are changed after deployment?","Once Choreo deploys a component with configurations, those configurations become immutable. Any subsequent change to these configurations will result in a new deployment.",docs\choreo-concepts\ci-cd.md/Deployment
How does Choreo facilitate the promotion of a component to higher environments?,Choreo builds a container once per GitHub commit and then allows it to be promoted to subsequent higher environments. Users can manually promote a component across environments by navigating to the 'Deploy' page of that component.,docs\choreo-concepts\ci-cd.md/Deployment
What are the two types of configurations Choreo allows users to define?,Choreo allows users to define both environment-independent configurations and environment-specific configurations.,docs\choreo-concepts\ci-cd.md/Configurations
"How do environment-independent configurations apply, and what is the process for changing them?","Environment-independent configurations apply to all environments. To change them, users must go to the 'Deploy' page of the component, make the necessary configuration changes via the 'Set Up' card, and then trigger a new deployment to the initial environment. From there, the component can be promoted to higher environments.",docs\choreo-concepts\ci-cd.md/Configurations
"How do environment-specific configurations apply, and what is the process for changing them?","Environment-specific configurations apply to a particular environment. To change them, users need to go to the 'Deploy' page of the component, make the necessary configuration changes via the specific environment card, and then trigger a new deployment.",docs\choreo-concepts\ci-cd.md/Configurations
For which component types is the information on the 'Execute' page applicable?,The information on the 'Execute' page is only applicable to scheduled and manual task components.,docs\choreo-concepts\ci-cd.md/Task execution
What kind of information can users track and monitor on the 'Execute' page for scheduled and manual tasks?,"On the 'Execute' page, users can track and monitor current and historic execution details, along with a quick snapshot of recent activity via the total count of executions within the last 30 days. For each execution, vital details such as the unique execution ID, the time it was triggered, and relevant revision information are available. Users can also dive deeper by clicking on a specific execution to access its associated logs.",docs\choreo-concepts\ci-cd.md/Task execution
What are the benefits of the information provided on the 'Execute' page?,"The information on the 'Execute' page enhances transparency, troubleshooting capabilities, and overall execution management, allowing users to easily monitor and analyze workflows.",docs\choreo-concepts\ci-cd.md/Task execution
How does Choreo ensure zero downtime during deployments and promotions?,Choreo performs rolling updates to ensure zero downtime between deployments and promotions.,docs\choreo-concepts\ci-cd.md/Zero-downtime deployments
What role do health checks play in Choreo's deployment process?,"A new build undergoes a health check before traffic is switched to it from the current build. If the necessary health checks are configured for a component, they can prevent deploying and promoting unhealthy versions of that component.",docs\choreo-concepts\ci-cd.md/Zero-downtime deployments
What is the fundamental definition of a component within a project in Choreo?,A component within a project in Choreo represents a single unit of work in a cloud native application.,docs\choreo-concepts\component.md/# Definition and Characteristics of a Component
What are common examples of what a component typically represents in Choreo?,"A component in Choreo is usually a single microservice, API, or job/task.",docs\choreo-concepts\component.md/# Definition and Characteristics of a Component
How is a component in Choreo linked to its source code or build instructions?,Each component in Choreo is attached to a given directory path in a Git repository. This directory path either contains the program source code or a Dockerfile with build instructions.,docs\choreo-concepts\component.md/# Definition and Characteristics of a Component
What is considered Choreo's fundamental unit of deployment?,A component is Choreoâ€™s unit of deployment.,docs\choreo-concepts\component.md/# Component Deployment and Scaling
How does a Choreo component map to the underlying infrastructure at deployment time?,Each component in Choreo maps to a single pod in the Kubernetes cluster (data plane) at deployment time.,docs\choreo-concepts\component.md/# Component Deployment and Scaling
"What capabilities does Choreo offer regarding the deployment, management, and scaling of individual components?","In Choreo, you can deploy, manage, and scale each component independently.",docs\choreo-concepts\component.md/# Component Deployment and Scaling
"Does Choreo support different types of components, and if so, what is the purpose of this variety?","Yes, Choreo supports different component types for various use cases.",docs\choreo-concepts\component.md/# Component Types and Features
What are some examples of the various component types supported by Choreo?,"Component types supported by Choreo include services, API proxies, integrations, web applications, and others.",docs\choreo-concepts\component.md/# Component Types and Features
Do different component types in Choreo possess unique features?,"Yes, each component type in Choreo hosts unique features based on its characteristics.",docs\choreo-concepts\component.md/# Component Types and Features
Can you provide an example of a specific feature tied to a particular component type in Choreo?,"For example, a scheduled integration component can accept a cron expression as a configuration to schedule an integration job/task.",docs\choreo-concepts\component.md/# Component Types and Features
"What are the two main forms in which services can exist, and what role do 'Connections' play in integrating them within Choreo?",Services can exist in two main forms: standalone and integrated. Connecting services is an integral part of creating integrated solutions. Choreo allows you to connect services using 'Connections' to integrate a service intended for deployment on Choreo with other services on Choreo or external resources.,docs\choreo-concepts\connections.md/Connections
"How does Choreo facilitate the integration of services using Connections, specifically regarding the information provided and its usage?","Upon creating a connection to a service on Choreo, Choreo provides a Connection ID along with a set of connection parameters. Developers can then configure their service to establish a connection using this Connection ID and map the connection parameters to environment variable names within their Choreo component. These environment variable names are read in the service implementation to retrieve the values, enabling a programmatic connection to the service being consumed.",docs\choreo-concepts\connections.md/Connections
Explain the runtime mechanism of Choreo Connections and the primary benefit of this approach for developers.,"At runtime, Choreo dynamically injects values into the environment variables based on the configured mapping. This approach ensures that the connection parameter values and the service connection creation remain loosely coupled, providing developers with flexibility and ease of maintenance.",docs\choreo-concepts\connections.md/Connections
What are the two different visibility levels available for adding Connections in Choreo?,You can add Connections in two different visibility levels: Project and Component.,docs\choreo-concepts\connections.md/Visibility Levels
What is the primary purpose and scope of Project Connections in Choreo?,Project Connections are created to connect to services within a particular project. Their primary scope is that they can be used by any component within that specific project.,docs\choreo-concepts\connections.md/Project Connections
Provide an example scenario where using a Project Connection would be beneficial.,"An example scenario where a Project Connection would be beneficial is if you want to share a third-party service, such as Twilio, across an entire project for all components within that project to reuse.",docs\choreo-concepts\connections.md/Project Connections
"How do components refer to Project Connections, and what is the implication for OAuth security schemes when using Project Connections to consume Choreo services?","Components can refer to Project Connections using the connection ID. When Project Connections are created to consume Choreo services under the OAuth security scheme, they will share the same OAuth application across the project, meaning any component reusing such a connection will use the same client ID and client secret.",docs\choreo-concepts\connections.md/Project Connections
What is the definition and usage scope of Component Connections in Choreo?,Component Connections are defined at the component level and are used exclusively by only that specific component.,docs\choreo-concepts\connections.md/Component Connections
Give an example of a situation where a Component Connection would be the appropriate choice.,An example of a situation where a Component Connection would be appropriate is if you want to connect a legacy service specifically to a given component.,docs\choreo-concepts\connections.md/Component Connections
"How do components refer to Component Connections, and what is the behavior regarding OAuth security schemes if a component consumes multiple Choreo services via Component Connections?","Components can refer to the Component Connection using the connection ID. If a component consumes more than one Choreo service, the Component connections created to consume those Choreo services under the OAuth security scheme can share the same OAuth application by sharing the same client ID and secret between all such connections.",docs\choreo-concepts\connections.md/Component Connections
"What are the two key components of Choreo's architecture, and what are their primary responsibilities?","Choreo's architecture comprises two key components: the control plane and the data plane. The control plane handles essential tasks such as administering organizations, users, and projects, and governs the entire journey of application development from creation to deployment, including governance and observability. The data plane is the environment where user applications are deployed based on configurations set in the control plane.",docs\choreo-concepts\data-planes.md/Data Planes
"What type of service is the Choreo control plane, and what does it manage?",The Choreo control plane is a SaaS (Software as a Service) that manages all cloud data planes and private data planes.,docs\choreo-concepts\data-planes.md/Data Planes
Which user personas are catered to by the Choreo control plane?,"The Choreo control plane caters to diverse user personas, including CIOs, architects, developers, DevOps, site reliability engineers, and platform engineers.",docs\choreo-concepts\data-planes.md/Data Planes
"What types of user applications can be deployed in the Choreo data plane, and what approach is supported for programming languages?","User applications deployed in the Choreo data plane can range from services and web applications to APIs, integrations, and scheduled tasks. These applications can be written in various programming languages, allowing for a polyglot approach.",docs\choreo-concepts\data-planes.md/Data Planes
How does the Choreo data plane ensure the containment of user data and traffic?,"All traffic related to the runtime of user applications is restricted to the Choreo data plane, ensuring strict containment of user data within its boundaries.",docs\choreo-concepts\data-planes.md/Data Planes
"What are the two distinct types of data planes featured in Choreo's architecture, and how do they differ in their infrastructure models?","Choreo's architecture features two distinct data plane types: cloud data planes and private data planes. A cloud data plane utilizes a multi-tenanted infrastructure model for deploying user applications, creating a shared yet secure environment. In contrast, a private data plane (PDP) provides dedicated infrastructure for a single organization to run its user applications, ensuring an added layer of privacy and control.",docs\choreo-concepts\data-planes.md/Data Planes
On which platforms can Choreo private data planes be deployed?,"Choreo private data planes can be deployed with almost all major cloud providers, such as Azure, AWS, and GCP, and are also compatible with on-premises infrastructure.",docs\choreo-concepts\data-planes.md/Private data planes - Infrastructure
What are the essential infrastructure requirements for a Choreo private data plane?,"The essential requirements for a private data plane include upstream-compatible Kubernetes clusters, a container registry, a key vault (secret store), and a logging service or log storage.",docs\choreo-concepts\data-planes.md/Private data planes - Infrastructure
How is the Choreo Private Data Plane (PDP) system set up on Kubernetes infrastructure?,Setting up the Choreo PDP system involves using a Helm installation on the Kubernetes infrastructure.,docs\choreo-concepts\data-planes.md/Private data planes - System components
Which software components are installed during the Helm execution for setting up a Choreo Private Data Plane?,"The following software components are installed during the Helm execution: Cilium CNI and service mesh, Choreo API Gateways and related components, Choreo PDP agent, Observability and logging APIs along with observability agents, and Flux controller.",docs\choreo-concepts\data-planes.md/Private data planes - System components
"How do the software components within a Choreo Private Data Plane receive updates, including security patches and bug fixes?","All software components within a Choreo Private Data Plane receive automatic updates, including security patches and bug fixes, through the Flux controller connected to the Choreo Update Management System.",docs\choreo-concepts\data-planes.md/Private data planes - System components
"What is the general direction of communication between the private data plane and the Choreo control plane, and what network configuration is typically not required from the PDP's perspective?",All communication between the private data plane and the Choreo control plane is outbound from the private data plane. This ensures that there is no need to open any specific `IP:Port` from the private data plane's perspective for these interactions.,docs\choreo-concepts\data-planes.md/Private data planes - Connectivity with the control plane
What action is necessary if an organization's network restricts all outbound traffic for a private data plane's communication with the control plane?,"If an organization's network restricts all outbound traffic, it is necessary to permit outbound traffic to the public IP range of the Choreo control plane for the private data plane to communicate effectively.",docs\choreo-concepts\data-planes.md/Private data planes - Connectivity with the control plane
"Describe the communication pathways, directions, and protocols for the Choreo PDP agent's connectivity.","The Choreo PDP agent communicates outbound to the Choreo control plane (mizzen server) using WSS protocol, and outbound (cluster internal) to the Kubernetes API server using HTTPS and WS protocols.",docs\choreo-concepts\data-planes.md/Private data planes - Connectivity with the control plane
What are the outbound communication endpoints and protocols for the APIM/local adaptor in a private data plane?,The APIM/local adaptor communicates outbound to the Global adaptor using HTTPS and outbound to Azure Service Bus (CP) using AMQP.,docs\choreo-concepts\data-planes.md/Private data planes - Connectivity with the control plane
How does the APIM/Enforcer component in a private data plane connect to the control plane?,The APIM/Enforcer component connects outbound to the Event hub (CP) using AMQP.,docs\choreo-concepts\data-planes.md/Private data planes - Connectivity with the control plane
What is the communication pathway for the Choreo secret resolver in a private data plane?,The Choreo secret resolver communicates outbound (VPC internal) to the Cloud secret store using HTTPS.,docs\choreo-concepts\data-planes.md/Private data planes - Connectivity with the control plane
Detail the inbound and outbound communication for the Container registry component within a private data plane.,"The Container registry component has inbound communication from the Container registry (public) via HTTPS, and outbound communication (VPC internal) to the Container registry via HTTPS.",docs\choreo-concepts\data-planes.md/Private data planes - Connectivity with the control plane
"Which external services does the Certificate manager in a private data plane communicate with, and using what protocol?","The Certificate manager communicates outbound to Azure DNS service and LetsEncrypt, both using HTTPS.",docs\choreo-concepts\data-planes.md/Private data planes - Connectivity with the control plane
What are the outbound communication pathways for the Flux source controller and Flux Helm controller in a private data plane?,"The Flux source controller communicates outbound to GitHub using HTTPS, and the Flux Helm controller communicates outbound to the Choreo container registry using HTTPS.",docs\choreo-concepts\data-planes.md/Private data planes - Connectivity with the control plane
How is all communication between the control plane and the private data plane secured?,All communication between the control plane and the private data plane is secured using TLS.,docs\choreo-concepts\data-planes.md/Private data planes - Connectivity with the control plane
"What is the central commitment of the private data plane observability architecture, and how is it achieved?",The private data plane observability architecture is centered around a strong commitment to data privacy and compliance. This is achieved through a strategic decision to retain logs and observability data within the data planes itself.,docs\choreo-concepts\data-planes.md/Private data planes - Observability architecture
How does the observability architecture in a private data plane enhance security and simplify access regarding data storage?,"Logs and observability data are stored within the data plane itself, enhancing security, simplifying access, and ensuring compliance.",docs\choreo-concepts\data-planes.md/Private data planes - Observability architecture
"Explain how the Choreo Console interacts with the private data plane for observability data, and what benefits this direct interaction provides.","The Choreo Console in the user's browser directly interacts with APIs in the data plane. This direct interaction reduces potential data routing complexities, ensures a more secure and direct flow of information, results in faster data retrieval, and provides users with immediate insights.",docs\choreo-concepts\data-planes.md/Private data planes - Observability architecture
How does the private data plane observability architecture minimize data exposure points?,"Fetching data directly from the data plane's APIs minimizes the number of data transfer points, effectively decreasing the chances of data exposure or interception.",docs\choreo-concepts\data-planes.md/Private data planes - Observability architecture
How does the private data plane observability architecture support compliance with regulatory standards like GDPR and CCPA?,"The architecture supports data locality, aligning with global regulatory standards like GDPR and CCPA by keeping data in its original environment.",docs\choreo-concepts\data-planes.md/Private data planes - Observability architecture
What benefits do users gain in terms of transparency and control over their data with the private data plane observability architecture?,"Users have a clear view of their data's location and access methods, alongside granular control over data access.",docs\choreo-concepts\data-planes.md/Private data planes - Observability architecture
What is the scope of security provided by the Choreo private data plane?,"The Choreo private data plane ensures extensive, production-grade security, ranging from infrastructure and architecture to zero-trust network security.",docs\choreo-concepts\data-planes.md/Private data planes - Security
How is incoming traffic protected in the Choreo private data plane?,All incoming traffic in the Choreo private data plane is protected by a firewall and must undergo authentication and authorization via the API Gateway.,docs\choreo-concepts\data-planes.md/Private data planes - Security
What mechanism is used for end-to-end network traffic encryption in the Choreo private data plane?,"The Choreo private data plane provides end-to-end network traffic encryption using Cilium transparent encryption, ensuring efficient data path encryption.",docs\choreo-concepts\data-planes.md/Private data planes - Security
What are the three management models supported by Choreo for private data planes (PDPs)?,"Choreo supports the following management models for private data planes (PDPs): WSO2 fully managed (infrastructure and PDP in WSO2 subscription) model, WSO2 fully managed (infrastructure and PDP in customer subscription) model, and Customer self-managed (WSO2 provides installation script and updates) model.",docs\choreo-concepts\data-planes.md/Private data planes - Management models
What is the purpose of offering different management models for Choreo private data planes?,"The different management models are offered to foster collaboration between WSO2 and customers across diverse scenarios, allowing for informed decisions depending on the supported cloud-based operations and security.",docs\choreo-concepts\data-planes.md/Private data planes - Management models
"What are Deployment Tracks in Choreo, and what is their primary function?","Deployment Tracks in Choreo are structured pathways designed for simplified software component deployment. They function like advanced CI/CD pipelines, ensuring that components reach their intended destinations seamlessly, whether they originate from source code or prebuilt images. Their primary function is to establish an organized and structured approach that minimizes errors and challenges typically associated with deployment workflows.",docs\choreo-concepts\deployment-tracks.md/Deployment Tracks
What two critical challenges do Deployment Tracks address to enhance the API consumer experience?,Deployment Tracks address two critical challenges to enhance the API consumer experience: streamlined deployment and efficient API versioning.,docs\choreo-concepts\deployment-tracks.md/The significance of Deployment Tracks
How do Deployment Tracks enhance the organization and reliability of the deployment process?,"Deployment Tracks enhance the organization and reliability of the deployment process by serving as well-designed routes for software components, similar to a well-structured express route.",docs\choreo-concepts\deployment-tracks.md/Streamlined deployments
"How do Deployment Tracks provide a straightforward method for efficient API versioning, especially for managed APIs?","Especially beneficial for managed APIs, Deployment Tracks provide a straightforward method for creating API versions that seamlessly interact with previous iterations. This simplified version management benefits both API creators and consumers alike.",docs\choreo-concepts\deployment-tracks.md/Efficient API versioning
What are the two integral approaches that Choreo dissects for streamlined deployments using Deployment Tracks?,"For streamlined deployments, Choreo dissects two integral approaches that leverage Deployment Tracks: the comprehensive CI/CD integration and the focused CD-Only strategy.",docs\choreo-concepts\deployment-tracks.md/Streamlined deployments
How is a deployment track linked in the context of CI/CD integration within Choreo?,"In the context of CI/CD integration, a deployment track is linked to a particular branch within a GitHub repository.",docs\choreo-concepts\deployment-tracks.md/CI/CD with Deployment Tracks
What is the benefit of linking a deployment track to a GitHub repository branch for handling deployments?,Linking a deployment track to a GitHub repository branch is useful for handling deployments to various environments.,docs\choreo-concepts\deployment-tracks.md/CI/CD with Deployment Tracks
Where can users easily visualize the deployments to specific environments associated with their selected deployment track in Choreo?,"On Choreo's Deploy page, users can easily visualize the deployments to specific environments associated with their selected deployment track.",docs\choreo-concepts\deployment-tracks.md/CI/CD with Deployment Tracks
What functionality does a deployment track have regarding automatic deployments for the linked branch?,A deployment track has a functionality that initiates automatic deployments for the linked branch.,docs\choreo-concepts\deployment-tracks.md/CI/CD with Deployment Tracks
What action triggers a deployment to the development environment when automatic deployments are activated for a linked branch?,"When automatic deployments are activated for a linked branch, merging a pull request (PR) triggers a deployment to the development environment.",docs\choreo-concepts\deployment-tracks.md/CI/CD with Deployment Tracks
Under what circumstances would a user choose the CD-Only strategy with Deployment Tracks in Choreo?,A user would choose the CD-Only strategy with Deployment Tracks if they are inclined to use their own Continuous Integration (CI) systems and want to harness the deployment track solely as a Continuous Deployment (CD) pipeline.,docs\choreo-concepts\deployment-tracks.md/CD-Only strategy with Deployment Tracks
How can a deployment track be linked when utilizing the CD-Only strategy?,"When utilizing the CD-Only strategy, a deployment track can be seamlessly linked to a container registry repository.",docs\choreo-concepts\deployment-tracks.md/CD-Only strategy with Deployment Tracks
What capability does linking a deployment track to a container registry repository provide to users in the CD-Only strategy?,Linking a deployment track to a container registry repository in the CD-Only strategy empowers users to effortlessly deploy images sourced directly from the linked container registry repository.,docs\choreo-concepts\deployment-tracks.md/CD-Only strategy with Deployment Tracks
To which specific type of components does the efficient API versioning section apply in Choreo?,The efficient API versioning section applies only to service components in Choreo.,docs\choreo-concepts\deployment-tracks.md/Efficient API versioning
"What versioning mechanism does Choreo follow for APIs, and what specific parts of it are included?","Choreo follows a versioning mechanism based on Semantic Versioning (SemVer), but it only includes the major version and minor version with the prefix `v`.",docs\choreo-concepts\deployment-tracks.md/Efficient API versioning
Provide an example of how an API version would look in Choreo based on its versioning mechanism.,An example of how an API version would look in Choreo is `v1.2`.,docs\choreo-concepts\deployment-tracks.md/Efficient API versioning
"According to Choreo's approach, when should the major version of an API be incremented?","According to Choreo's approach, the major version of an API should be incremented when incompatible API changes are made.",docs\choreo-concepts\deployment-tracks.md/Efficient API versioning
"According to Choreo's approach, when should the minor version of an API be incremented?","According to Choreo's approach, the minor version of an API should be incremented when functionality is added in a backward-compatible manner.",docs\choreo-concepts\deployment-tracks.md/Efficient API versioning
What is Semantic Versioning (SemVer) as described in the documentation?,"Semantic Versioning (SemVer) is a specification that defines how to assign and increment version numbers for software products, including APIs.",docs\choreo-concepts\deployment-tracks.md/Efficient API versioning
What is one of the primary concerns when dealing with SaaS APIs regarding updates and consumer disruption?,One of the primary concerns when dealing with SaaS APIs is to minimize disruption for API consumers while continuously developing and deploying updates.,docs\choreo-concepts\deployment-tracks.md/Efficient API versioning
How are changes that do not introduce breaking or additive modifications to an API categorized in compliance with SemVer?,"In compliance with SemVer, changes that don't introduce breaking or additive modifications to the API are categorized as patch updates.",docs\choreo-concepts\deployment-tracks.md/Efficient API versioning
"From the perspective of API consumers, how should patch updates ideally affect their API clients?","From the perspective of API consumers, patch updates should ideally not disrupt their API clients.",docs\choreo-concepts\deployment-tracks.md/Efficient API versioning
"What API version alterations are API consumers typically most concerned with, and when might minor version changes be communicated to them?","API consumers are typically most concerned with major API version alterations, but there might be instances where minor version changes are communicated to them.",docs\choreo-concepts\deployment-tracks.md/Efficient API versioning
"In the context of deployment tracks, what specific API version information do API developers need to specify?","In the context of deployment tracks, API developers only need to specify the major and minor versions being delivered from a particular deployment track.",docs\choreo-concepts\deployment-tracks.md/Efficient API versioning
What is the specified major and minor version information treated as for a deployment track?,The specified major and minor version information is treated as the API version attribute of a deployment track.,docs\choreo-concepts\deployment-tracks.md/Efficient API versioning
"How can a publisher accomplish versioning for internal tracking purposes if required, outside of the deployment track's API version attribute?","If the publisher requires versioning for internal tracking purposes, this can be accomplished in Git through the use of Git tags, on GitHub with GitHub releases, and so forth.",docs\choreo-concepts\deployment-tracks.md/Efficient API versioning
"What is an Endpoint defined as in the context of Choreo, and where does it typically reside?","In Choreo, an Endpoint is defined as a network-exposed function. It resides within a component.",docs\choreo-concepts\endpoint.md/Endpoint Definition and Characteristics
Which specific types of components in Choreo are capable of exposing one or more endpoints?,"In Choreo, both service components and integration components are capable of exposing one or more endpoints.",docs\choreo-concepts\endpoint.md/Endpoint Definition and Characteristics
"What is a service contract in relation to an endpoint, and what are examples of such contracts mentioned?",A service contract is a specification associated with an endpoint in a component. This contract is used to expose the endpoint to consumers. Examples of service contracts mentioned include OpenAPI and GraphQL SDL.,docs\choreo-concepts\endpoint.md/Endpoint Definition and Characteristics
What is the primary purpose of associating a service contract with an endpoint in Choreo?,The primary purpose of associating a service contract with an endpoint is to expose that endpoint to consumers.,docs\choreo-concepts\endpoint.md/Endpoint Definition and Characteristics
What default contract does Choreo apply to an endpoint if a specific service contract is not provided?,"In the absence of a specific service contract, Choreo uses `/* exposed on all HTTP verbs` as the default contract to expose the service or the integration.",docs\choreo-concepts\endpoint.md/Endpoint Definition and Characteristics
How does Choreo categorize or treat each individual endpoint exposed within a component for management purposes?,Each endpoint exposed in a component is considered a single API by Choreo.,docs\choreo-concepts\endpoint.md/Endpoint Definition and Characteristics
What specific capability does Choreo offer regarding API management for endpoints within a given component?,Choreo allows users to perform API management on a per-endpoint basis for a given component.,docs\choreo-concepts\endpoint.md/Endpoint Definition and Characteristics
Can you provide examples of API management functionalities that can be performed on a per-endpoint basis in Choreo?,Examples of API management functionalities that can be performed on a per-endpoint basis in Choreo include lifecycle management and configuring security settings.,docs\choreo-concepts\endpoint.md/Endpoint Definition and Characteristics
Where can users find more detailed instructions on how to configure endpoints when developing components in Choreo?,Users can find more detailed instructions on how to configure endpoints when developing components in Choreo by referring to the documentation titled 'Configure Endpoints' (located at `../develop-components/configure-endpoints.md`).,docs\choreo-concepts\endpoint.md/Endpoint Definition and Characteristics
What is the fundamental purpose of environments in Choreo for developers?,"In Choreo, environments are provided to developers as spaces to run their applications within a given data plane.",docs\choreo-concepts\environments.md/# Environments
Which environments are provided by default in the Choreo cloud data plane?,"By default, the Choreo cloud data plane provides two environments: development and production.",docs\choreo-concepts\environments.md/# Environments
How are projects in Choreo associated with environments?,Each project in Choreo is associated with one or more environments that are available within the organization.,docs\choreo-concepts\environments.md/# Environments
Can different projects in Choreo utilize different sets of environments? Provide an example.,"Yes, different projects can utilize different sets of environments. For example, Project A might choose to use development, staging, and production environments, while Project B might only use development and production environments.",docs\choreo-concepts\environments.md/# Environments
What action can be performed on components within a project regarding environments?,Components within a project can be promoted across the available environments.,docs\choreo-concepts\environments.md/# Environments
What happens to a component's configuration values when it is promoted across environments in Choreo?,"When a component is promoted across environments, its configuration values can be overridden with environment-specific values.",docs\choreo-concepts\environments.md/# Environments
Is there a visual aid provided in the documentation to illustrate the component promotion process across environments?,"Yes, the documentation states that a diagram illustrates how a component is promoted across environments.",docs\choreo-concepts\environments.md/# Environments
"What is the definition of an organization in Choreo, and what is its primary function?",An organization in Choreo is defined as a logical grouping of users and user resources. Its primary function is to logically group users and their associated resources.,docs\choreo-concepts\organization.md/# Organization
What is the mandatory action for a first-time user when signing in to Choreo regarding organizations?,A first-time user must create an organization and become a member of it when signing in to Choreo.,docs\choreo-concepts\organization.md/# Organization
"Can users and resources from one Choreo organization access resources in another organization? If so, under what specific conditions?","No, users and resources in one organization cannot access resources in another organization by default. Access is only granted if an administrator of the other organization invites them and adds them as a member of that organization.",docs\choreo-concepts\organization.md/# Organization
Is a user permitted to create more than one organization in Choreo?,"No, a user cannot create more than one organization in Choreo.",docs\choreo-concepts\organization.md/# Organization
Under what circumstances can a user switch between organizations in Choreo?,A user can switch between organizations if they are a member of more than one organization.,docs\choreo-concepts\organization.md/## Switch organizations
What are the steps to switch from one organization to another within the Choreo Console?,"To switch organizations, a user needs to select the required organization from the 'Organization' list located in the Choreo Console header.",docs\choreo-concepts\organization.md/## Switch organizations
How does Choreo manage user permissions within its system?,Choreo manages user permissions through the use of groups and roles.,docs\choreo-concepts\organization.md/## Manage user permission
"What is a group in Choreo, and how do users within a group inherit permissions?","A group in Choreo is a collection of users, with each user having one or more roles assigned to them. Users within a group automatically inherit the permissions associated with the roles assigned to that specific group.",docs\choreo-concepts\organization.md/### Groups
Can you list the predefined groups available in Choreo and describe the primary role associated with each?,"Choreo comes with several predefined groups, each configured with specific roles:
- **API Publisher**: A collection of users who have the API Publisher role.
- **API Subscriber**: A collection of users who have the API Subscriber role.
- **Admin**: A collection of users who have the Admin role.
- **Billing Admin**: A collection of users who have the Billing Admin role.
- **Choreo DevOps**: A collection of users who have the Choreo DevOps role.
- **Developer**: Users who develop, deploy, and manage cloud native applications at scale.
- **External API Subscriber**: A collection of users who have the External API Subscriber role.",docs\choreo-concepts\organization.md/### Groups
"What is an important consideration when creating a new group in Choreo, especially when inviting members?","When creating a new group to invite members, it is important to assign a role to the group. This ensures that the users added to the group will have the necessary required permissions.",docs\choreo-concepts\organization.md/### Groups
What are the responsibilities and permissions associated with the 'Admin' role in Choreo?,"The 'Admin' role in Choreo performs all administrative tasks, which include user management, Developer Portal customization, project management, analytics configuration, and domain management.",docs\choreo-concepts\organization.md/### Roles
Describe the tasks that an 'API Publisher' can perform in Choreo.,"An 'API Publisher' in Choreo can discover, create, publish, delete, test, and manage APIs.",docs\choreo-concepts\organization.md/### Roles
What actions can an 'API Subscriber' undertake in Choreo?,"An 'API Subscriber' in Choreo can subscribe to APIs, manage subscriptions and applications, and generate and manage API keys.",docs\choreo-concepts\organization.md/### Roles
What are the duties of a 'Billing Admin' in Choreo?,"A 'Billing Admin' in Choreo handles billing administration, including viewing tiers, managing organizations and invoices, and managing subscriptions and payment methods.",docs\choreo-concepts\organization.md/### Roles
What is the primary function of the 'Choreo DevOps' role?,"The 'Choreo DevOps' role is responsible for managing the deployment, monitoring, and reliability of components within Choreo.",docs\choreo-concepts\organization.md/### Roles
What responsibilities does the 'Choreo Platform Engineer' role entail?,"The 'Choreo Platform Engineer' role performs tasks related to infrastructure, governance, service mesh, and monitoring.",docs\choreo-concepts\organization.md/### Roles
What is the scope of work for a 'Developer' in Choreo?,"A 'Developer' in Choreo is responsible for developing, deploying, and managing cloud-native applications at scale.",docs\choreo-concepts\organization.md/### Roles
What are the capabilities of an 'External API Subscriber' in Choreo?,An 'External API Subscriber' can consume APIs with Developer Portal access and has the ability to join an organization exclusively for API usage.,docs\choreo-concepts\organization.md/### Roles
"Which Choreo role has been deprecated, and what is the current status regarding its usage for existing organizations?","The 'Environment Manager' role has been deprecated. Additionally, the 'Choreo DevOps' role has been replaced with the 'Choreo Platform Engineer' role. However, organizations that previously had the 'Choreo DevOps' role will continue to see and use both roles with their existing functionality.",docs\choreo-concepts\organization.md/### Roles
What is the purpose of the Organization ID in Choreo?,The Organization ID serves as a unique identifier for each organization in Choreo.,docs\choreo-concepts\organization.md/## Organization ID
What are the step-by-step instructions to retrieve the Organization ID for an organization in Choreo?,"To get the Organization ID, follow these steps:
1. Go to https://console.choreo.dev/ and sign in. This opens the project home page.
2. Click on the 'Organization' list on the header and select your organization.
3. In the left navigation, click 'Settings'.
4. In the header, click the 'Organization' list. This will open the organization level settings page.
5. Under 'Organization', click 'Copy ID'.",docs\choreo-concepts\organization.md/## Organization ID
"What is the Organization Handle in Choreo, and what does it represent?",The Organization Handle in Choreo is a unique string that directly corresponds to your organization's name.,docs\choreo-concepts\organization.md/## Organization Handle
How can a user find the Organization Handle for their organization in the Choreo Console?,"To get the Organization Handle, follow these steps:
1. Go to https://console.choreo.dev/ and sign in. This opens the project home page.
2. Click on the 'Organization' list on the header and select your organization.
3. In the left navigation, click 'Settings'.
4. Under 'Organization', click 'Copy Handle'.",docs\choreo-concepts\organization.md/## Organization Handle
What is the fundamental definition of a project within the Choreo platform?,A project in Choreo is defined as a logical group of related components. Its primary purpose is to typically represent a single cloud-native application.,docs\choreo-concepts\project.md/# Project Definition and Characteristics in Choreo
How many components can a project in Choreo contain?,A project in Choreo consists of one or more components.,docs\choreo-concepts\project.md/# Project Definition and Characteristics in Choreo
"How are components within a Choreo project ideally organized in terms of GitHub repositories, and what is this architecture known as?","Ideally, all components within a project can be located in a single GitHub repository under different paths, although this is not a strict restriction. This organizational approach is known as the monorepo architecture.",docs\choreo-concepts\project.md/# Project Definition and Characteristics in Choreo
Where are all components within a given Choreo project deployed at deployment time?,"At deployment time, all components within a given project are deployed into a single namespace of the Kubernetes cluster.",docs\choreo-concepts\project.md/# Project Definition and Characteristics in Choreo
What are the various exposure options available for components within a Choreo project?,"Components within a project can be exposed in three ways: to the public internet, internally to the rest of the organization, or privately within the project only.",docs\choreo-concepts\project.md/# Project Definition and Characteristics in Choreo
How is a project in Choreo represented in the context of architectural patterns?,"A project in Choreo is represented as a cell with regard to the Cell-based architecture, as described in the WSO2 reference architecture.",docs\choreo-concepts\project.md/# Project Definition and Characteristics in Choreo
What does the provided diagram illustrate concerning a Choreo project?,The provided diagram illustrates a project and how the components within that project are laid out at runtime.,docs\choreo-concepts\project.md/# Project Definition and Characteristics in Choreo
How are data planes related to organizations in Choreo?,"In Choreo, data planes are directly connected to the organization.",docs\choreo-concepts\resource-hierarchy.md/Organizations and data planes
What is the scope of availability for data planes within an organization in Choreo?,Data planes connected to an organization in Choreo are available for all projects within that organization.,docs\choreo-concepts\resource-hierarchy.md/Organizations and data planes
What happens concerning data planes and Kubernetes namespaces when an environment is created in a project in Choreo?,"When an environment is created in a project in Choreo, the data plane connected to the organization is automatically linked with an automatically generated Kubernetes namespace.",docs\choreo-concepts\resource-hierarchy.md/Organizations and data planes
What is the relationship between Kubernetes clusters and environments in Choreo?,Choreo allows multiple Kubernetes clusters to be associated with an environment.,docs\choreo-concepts\resource-hierarchy.md/Environments and data planes
What benefits does associating multiple Kubernetes clusters with an environment provide in Choreo?,Associating multiple Kubernetes clusters with an environment in Choreo enables the building of highly resilient and resource-efficient solutions that utilize multiple clusters.,docs\choreo-concepts\resource-hierarchy.md/Environments and data planes
How does Choreo facilitate multi-cluster deployment within an environment?,"Choreo facilitates multi-cluster deployment by synchronizing applications and workloads between associated clusters in an environment, allowing for deployment with a single click.",docs\choreo-concepts\resource-hierarchy.md/Environments and data planes
"Is it mandatory to use a different Kubernetes cluster for each environment in Choreo, and what flexibility does Choreo offer in this regard?","No, it is not necessary to use a different Kubernetes cluster per environment in Choreo. You can create multiple environments on the same cluster. The provided diagram is an example of a specific solution, and application architecture may require a different configuration.",docs\choreo-concepts\resource-hierarchy.md/Environments and data planes
To which entity do components belong in Choreo?,Components belong to a project in Choreo.,docs\choreo-concepts\resource-hierarchy.md/Components and environments
How are environments provisioned in relation to projects in Choreo?,Environments are provisioned per project in Choreo.,docs\choreo-concepts\resource-hierarchy.md/Components and environments
How are components deployed in Choreo?,"When a component is deployed in Choreo, it is deployed as a container to the specified environment.",docs\choreo-concepts\resource-hierarchy.md/Components and environments
What action can be performed with a component's container image after it has been deployed in Choreo?,"Once a component's container image is deployed, it can be promoted across the environments available in the project.",docs\choreo-concepts\resource-hierarchy.md/Components and environments
