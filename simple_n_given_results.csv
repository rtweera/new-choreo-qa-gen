question,answer,source
What is the primary purpose of the Choreo Marketplace?,"The Choreo Marketplace promotes and facilitates reusing and sharing services, allowing users to share all services deployed in Choreo.",docs\choreo-concepts\choreo-marketplace.md/Choreo Marketplace Introduction
What functionalities does the Choreo Marketplace offer to its users?,"Users can easily browse and search available services, refer to service definitions, documentation, and instructions on how to use them.",docs\choreo-concepts\choreo-marketplace.md/Choreo Marketplace Introduction
Why is effective discoverability important in the Choreo Marketplace?,"Effective discoverability is desirable because the Marketplace includes all services deployed in an organization, which can be a large number.",docs\choreo-concepts\choreo-marketplace.md/Discover Services
How can users discover services in the Choreo Marketplace?,Users can discover services by using the top search bar or by applying various filter criteria through the left-hand side filter panel.,docs\choreo-concepts\choreo-marketplace.md/Discover Services
What search attributes are available for universal searching in the Choreo Marketplace?,"Users can search for text in the following attributes: Name (service name), Label (service labels), Content (overview, summary, and documentation), or All (all of the above criteria).",docs\choreo-concepts\choreo-marketplace.md/Discover Services
What are the two available options for the 'Type' filter in the Choreo Marketplace and what do they represent?,"The two options are 'Internal,' referring to services deployed within Choreo, and 'Third-party,' referring to services running externally to Choreo but independently added to the Marketplace.",docs\choreo-concepts\choreo-marketplace.md/Discover Services
What are the network visibility levels available for filtering services in the Choreo Marketplace?,"The three network visibility levels are 'Public' (services exposed publicly), 'Organization' (services exposed across the entire organization), and 'Project' (services exposed at the project level).",docs\choreo-concepts\choreo-marketplace.md/Discover Services
How can a user explore a service in detail within the Choreo Marketplace?,Users can click on the service card to open the detailed view of the service.,docs\choreo-concepts\choreo-marketplace.md/Explore a service
What information is featured in the header of the detailed service page?,"The header of the detailed service page features the service name, summary, version, labels, and service icon.",docs\choreo-concepts\choreo-marketplace.md/Explore a service
What content is displayed under the 'Overview' tab of a service's detailed view?,"The 'Overview' tab displays the service overview provided by the service developer. If no content was provided at service creation, this section will be disabled.",docs\choreo-concepts\choreo-marketplace.md/Explore a service
Where does the API definition for a service in the Marketplace come from?,"The API definition is extracted from the `component.yaml` file in the user repository. If an API definition is not provided, this tab will be empty.",docs\choreo-concepts\choreo-marketplace.md/Explore a service
What kind of information is included in the 'How to use' tab of a service's detailed view?,"The 'How to use' tab includes instructions on how to use the selected service, including instructions on creating a connection.",docs\choreo-concepts\choreo-marketplace.md/Explore a service
What content is available in the 'Related documents' tab?,The 'Related documents' tab includes any additional content the user has provided as documents through the Manage -> Marketplace section of the component.,docs\choreo-concepts\choreo-marketplace.md/Explore a service
What is considered a 'Choreo service' in the context of the Choreo Marketplace?,"In Choreo, a service exposed through the platform is termed a Choreo service, with each service identifiable by an endpoint within a Choreo service component.",docs\choreo-concepts\choreo-marketplace.md/Add a service to the Choreo Marketplace
When do Choreo services get automatically added to the Marketplace?,"Upon deployment to the initial environment, services automatically get added to the Marketplace.",docs\choreo-concepts\choreo-marketplace.md/Add a service to the Choreo Marketplace
How is the service name derived for entries in the Choreo Marketplace?,"The service name follows the convention of `component name - endpoint name`, while all other details remain unchanged.",docs\choreo-concepts\choreo-marketplace.md/Add a service to the Choreo Marketplace
How are service versions displayed in the Choreo Marketplace?,"Service versions are displayed in their major version format, representing the latest version of the service within its major version, following semantic versioning principles.",docs\choreo-concepts\choreo-marketplace.md/Service versioning
What happens in the Marketplace when a new minor version of an already deployed Choreo service is released?,"When a new minor version is deployed, the corresponding service in the marketplace automatically updates to reflect the latest version within the same major version.",docs\choreo-concepts\choreo-marketplace.md/Service versioning
Explain semantic-version-based intelligent routing in the Choreo Marketplace.,"When a service from the Choreo Marketplace is used as a dependency, the dependent service's traffic automatically routes to the latest version of the corresponding service within the same major version, ensuring dependencies remain up-to-date without manual updates.",docs\choreo-concepts\choreo-marketplace.md/Service versioning
"How are service definitions, visibility, and descriptions updated in the Choreo Marketplace?","Choreo automatically updates service definitions, visibility, and descriptions during redeployment to any environment.",docs\choreo-concepts\choreo-marketplace.md/Edit services
"What is Choreo's primary offering regarding CI/CD, and how does it manage environments for projects?","Choreo provides a streamlined continuous integration and continuous deployment (CI/CD) experience for efficient application and service deployment across multiple environments. For each project, Choreo creates isolated deployment areas called environments, where all components within the project share these environments with restricted network and resource access.",docs\choreo-concepts\ci-cd.md/CI/CD Overview & Environments
"What are the default environments in Choreo's cloud data plane, and can environments be customized in a private data plane organization?","In the Choreo cloud data plane, the two default environments are development and production. However, in a private data plane organization, users can customize and create multiple environments based on their specific requirements.",docs\choreo-concepts\ci-cd.md/CI/CD Overview & Environments
"Explain Choreo's 'build once, deploy many' strategy for managing components across multiple environments.","Choreo adopts a 'build once, deploy many' strategy. An application is built only once (either per commit if automatic build on commit is enabled or based on a selected commit for manual builds). This single build is then promoted to subsequent environments, allowing changes to be tested in lower, non-production environments (like development) before being promoted to production.",docs\choreo-concepts\ci-cd.md/CI/CD Overview & Environments
"How does Choreo handle configurations and secrets, and what types of information do they include?","Choreo injects configurations and secrets, maintained at the environment level, into components at runtime. This ensures a strict separation of environment-specific configurations from source code. These configurations and secrets include resource credentials (to databases, caches, backing services) and credentials to external cloud services (like Amazon S3 or external APIs).",docs\choreo-concepts\ci-cd.md/Configurations and Secrets
"How are configurations and secrets secured in Choreo, and where can they be stored in a private data plane organization?","All configurations and secrets are encrypted at rest and in transit and stored in a secure vault. In a private data plane organization, users have the option to store configurations and secrets in their own infrastructure.",docs\choreo-concepts\ci-cd.md/Configurations and Secrets
What are the general steps involved in Choreo's auto-generated build pipelines?,"Generally, Choreo's build pipelines involve building a container image from provided source code or a Dockerfile for a specific commit, running security and vulnerability scans (if applicable), pushing the container image to a container registry, and updating service endpoints and API specifications from the repository (if applicable). Some buildpacks also support integrating unit tests.",docs\choreo-concepts\ci-cd.md/Build Process
Where are container images pushed by Choreo in the cloud data plane versus a private data plane organization?,"In the cloud data plane, Choreo pushes the image to a Choreo-managed registry. If it is a private data plane organization, Choreo pushes the image to a registry that the user owns.",docs\choreo-concepts\ci-cd.md/Build Process
"What is meant by 'repeatable builds' in Choreo, and what happens if multiple builds are initiated from the same code version?","Repeatable builds mean that Choreo can replicate builds from an identical code version (Git commit), generating Docker images with the same behavior. In the event of multiple builds from the same code version, Choreo preserves only the most recent version of the Docker image created from that particular code version.",docs\choreo-concepts\ci-cd.md/Build Process
"How can a user manually trigger a build in Choreo, and what is 'Auto Build on Commit'?","Users can trigger a build manually from the 'Build' page by clicking 'Build Latest' and optionally selecting a specific commit. 'Auto Build on Commit' is an option that, when enabled, automatically triggers a build with each new commit to the connected Git repository.",docs\choreo-concepts\ci-cd.md/Build Process
What is a special consideration for Admin and Choreo DevOps users when triggering builds using specific tags?,"Admin and Choreo DevOps users can trigger builds using specific tags from the connected Git repository. However, this action bypasses the standard branch-based deployment process and should only be used for critical, time-sensitive scenarios, as it can disrupt deployment track integrity.",docs\choreo-concepts\ci-cd.md/Build Process
How can users view build logs in Choreo?,"Users can view build logs for specific builds directly on the 'Build' page. To view detailed information for a particular build, they need to click 'View Details' corresponding to that build.",docs\choreo-concepts\ci-cd.md/Build Process
What are the two approaches to deploy an image in Choreo once it's built?,"An image can be deployed manually by going to the 'Deploy' page, navigating to the 'Set Up' card, and clicking 'Deploy'. Alternatively, 'Auto Deploy on Build' can be enabled on the 'Set Up' card of the 'Deploy' page, which automatically initiates deployment upon the completion of an automatic build.",docs\choreo-concepts\ci-cd.md/Deployment Process
What is the prerequisite for enabling 'Auto Deploy on Build'?,"To enable 'Auto Deploy on Build', 'Auto Build on Commit' must also be enabled, as automatic deployment is not necessary or useful without automatic builds.",docs\choreo-concepts\ci-cd.md/Deployment Process
Are there any specific considerations for the first build and configurable values for Ballerina components?,"The first build for a Ballerina component must be triggered manually to ensure Choreo applies required configurations to the development environment, after which automatic builds can be enabled. Choreo also automatically checks configurable values defined in the source code against those applied in an environment, and auto-build pipelines can fail as a precaution if configurables are missing to avoid runtime crashes. This configurable verifying capability is only available for Ballerina components.",docs\choreo-concepts\ci-cd.md/Deployment Process
"What is the 'setup area' in the deploy phase, and what happens to configurations after initial deployment?","In the deploy phase, Choreo uses a 'setup area' to merge the Docker image with its environment-independent configurations, resulting in the initial deployment. Once a component is deployed with configurations, these configurations become immutable; any subsequent change will result in a new deployment.",docs\choreo-concepts\ci-cd.md/Deployment Process
How can a component be promoted to a higher environment in Choreo?,"Choreo builds a container once per GitHub commit, and then it can be promoted to subsequent higher environments. Users can manually promote a component across environments by navigating to the 'Deploy' page of that component.",docs\choreo-concepts\ci-cd.md/Deployment Process
"What are environment-independent configurations, and how are they changed?","Environment-independent configurations apply to all environments. To change them, users must go to the 'Deploy' page of the component, make the necessary configuration changes via the 'Set Up' card, and then trigger a new deployment to the initial environment. From there, the component can be promoted to higher environments.",docs\choreo-concepts\ci-cd.md/Configuration Management
"What are environment-specific configurations, and how are they changed?","Environment-specific configurations apply only to a particular environment. To change them, users need to go to the 'Deploy' page of the component, make the necessary configuration changes via the specific environment card, and then trigger a new deployment for that environment.",docs\choreo-concepts\ci-cd.md/Configuration Management
"For which component types is the 'Execute' page applicable, and what information does it provide?","The 'Execute' page is only applicable to scheduled and manual task components. It allows users to track and monitor current and historic execution details, view a snapshot of recent activity (total executions in the last 30 days), and access vital details for each execution such as unique ID, trigger time, and revision information. Users can also dive deeper into specific execution logs.",docs\choreo-concepts\ci-cd.md/Task Execution
How does Choreo ensure zero downtime during deployments and promotions?,Choreo performs rolling updates to ensure zero downtime between deployments and promotions. A new build undergoes a health check before traffic is switched to it from the current build. Configuring necessary health checks for a component can prevent deploying and promoting unhealthy versions.,docs\choreo-concepts\ci-cd.md/Zero-Downtime Deployments
"What is a component in Choreo, and what does it typically represent?","In Choreo, a component is a single unit of work within a cloud-native application. It typically represents a single microservice, API, or job/task. It serves as Choreo’s unit of deployment.",docs\choreo-concepts\component.md/Definition and Core Concept of a Component
"How is a component linked to a Git repository, and what is its mapping in a Kubernetes cluster?","Each component in Choreo is attached to a specific directory path within a Git repository. This directory path either contains program source code or a Dockerfile with build instructions. At deployment time, each component maps to a single pod in the Kubernetes cluster (data plane).",docs\choreo-concepts\component.md/Component Integration with Git and Kubernetes
"What are the implications for deployment, management, and scaling of components in Choreo?","Since each component maps to a single pod in the Kubernetes cluster, components in Choreo can be deployed, managed, and scaled independently.","docs\choreo-concepts\component.md/Deployment, Management, and Scalability"
"Does Choreo support different types of components, and do these types have unique features?","Yes, Choreo supports various component types for different use cases, including services, API proxies, integrations, and web applications. Each component type hosts unique features based on its characteristics; for instance, a scheduled integration component can accept a cron expression as a configuration to schedule an integration job/task.",docs\choreo-concepts\component.md/Component Types and Unique Features
"What are the two main forms services can exist in, and what is the role of Connections in Choreo?","Services can exist in two main forms: standalone and integrated. Connections in Choreo are an integral part of creating integrated solutions, allowing users to connect services.",docs\choreo-concepts\connections.md/Introduction to Connections
What types of services can be integrated using Choreo Connections?,"Using Connections, you can integrate a service you intend to deploy on Choreo with other services already on Choreo, or with external resources.",docs\choreo-concepts\connections.md/Introduction to Connections
"When creating a connection to a service on Choreo, what does Choreo provide to the user?","Upon creating a connection to a service on Choreo, Choreo provides a Connection ID along with a set of connection parameters.",docs\choreo-concepts\connections.md/How Connections Work
How do developers configure their service to establish a connection using the provided Connection ID and parameters?,Developers can configure their service to establish a connection using the Connection ID and map connection parameters to environment variable names in their Choreo component. These environment variable names can then be read in the service implementation to retrieve values for programmatic connection.,docs\choreo-concepts\connections.md/How Connections Work
How does Choreo ensure loose coupling between connection parameter values and service connection creation at runtime?,"At runtime, Choreo dynamically injects values into the environment variables based on the configured mapping. This approach ensures that the connection parameter values and the service connection creation remain loosely coupled, providing developers with flexibility and ease of maintenance.",docs\choreo-concepts\connections.md/How Connections Work
What are the two different visibility levels for adding Connections in Choreo?,Connections can be added in two different visibility levels: Project and Component.,docs\choreo-concepts\connections.md/Visibility Levels
"What are Project Connections, and what is their scope of usage?",Project Connections are Connections created to connect to services within a particular project. They can be used by any component within that project.,docs\choreo-concepts\connections.md/Project Connections
Provide an example scenario where Project Connections would be useful.,"For example, if you want to share a third-party service like Twilio across the project for all components within that project to reuse, you can create a Project Connection.",docs\choreo-concepts\connections.md/Project Connections
How do Project Connections handle OAuth security for Choreo services?,Project Connections created to consume Choreo services under the OAuth security scheme will share the same OAuth application across the project. Any component reusing such a connection will use the same client ID and client secret.,docs\choreo-concepts\connections.md/Project Connections
"What are Component Connections, and what is their scope of usage?",Component Connections are Connections defined at the component level and are used by only that specific component.,docs\choreo-concepts\connections.md/Component Connections
Provide an example scenario where Component Connections would be useful.,"For example, you would create a Component Connection if you want to connect a legacy service to a given component.",docs\choreo-concepts\connections.md/Component Connections
How do Component Connections manage OAuth security if a component consumes multiple Choreo services?,"If a component consumes more than one Choreo service, Component Connections created to consume those Choreo services under the OAuth security scheme can share the same OAuth application by sharing the same client ID and secret between all such connections.",docs\choreo-concepts\connections.md/Component Connections
What are the two key components of Choreo's architecture?,Choreo's architecture comprises two key components: the control plane and the data plane.,docs\choreo-concepts\data-planes.md/Choreo Architecture Overview
What are the primary responsibilities of the Choreo control plane?,"The control plane handles essential tasks such as administering organizations, users, and projects. Additionally, it governs the entire journey of application development, from creation to deployment, including governance enforcement and observability provision.",docs\choreo-concepts\data-planes.md/Choreo Architecture Overview
What is the nature of the Choreo control plane and what does it manage?,The Choreo control plane is a SaaS that manages all cloud data planes and private data planes.,docs\choreo-concepts\data-planes.md/Choreo Architecture Overview
What is the primary function of the data plane in Choreo's architecture?,The data plane is the environment where user applications are deployed based on configurations set in the control plane.,docs\choreo-concepts\data-planes.md/Data Plane Definition and Function
What types of applications can be deployed in the Choreo data plane?,"Applications that can be deployed in the data plane include services, web applications, APIs, integrations, and scheduled tasks, and they can be written in various programming languages, allowing for a polyglot approach.",docs\choreo-concepts\data-planes.md/Data Plane Definition and Function
What is the restriction regarding user application runtime traffic in Choreo?,"All traffic related to the runtime of user applications is restricted to the Choreo data plane, ensuring strict containment of user data within its boundaries.",docs\choreo-concepts\data-planes.md/Data Plane Definition and Function
What are the two distinct types of data planes featured in Choreo's architecture?,Choreo's architecture features two distinct data plane types: cloud data planes and private data planes.,docs\choreo-concepts\data-planes.md/Types of Data Planes
How does a cloud data plane differ from a private data plane?,"A cloud data plane utilizes a multi-tenanted infrastructure model for deploying user applications, creating a shared yet secure environment. In contrast, a private data plane (PDP) provides dedicated infrastructure for a single organization to run its user applications, ensuring an added layer of privacy and control.",docs\choreo-concepts\data-planes.md/Types of Data Planes
Which cloud providers and infrastructure types are compatible with Choreo private data planes?,"Choreo private data planes can be deployed with almost all major cloud providers, such as Azure, AWS, and GCP, and are also compatible with on-premises infrastructure.",docs\choreo-concepts\data-planes.md/Private Data Plane Infrastructure
What are the essential infrastructure requirements for a private data plane?,"The essential requirements for a private data plane include upstream-compatible Kubernetes clusters, a container registry, a key vault (secret store), and a logging service or log storage.",docs\choreo-concepts\data-planes.md/Private Data Plane Infrastructure
How are the Choreo PDP system components installed?,Setting up the Choreo PDP system involves using a Helm installation on the Kubernetes infrastructure.,docs\choreo-concepts\data-planes.md/Private Data Plane System Components
What software components are installed during the Helm execution for a Choreo PDP?,"The installed software components include Cilium CNI and service mesh, Choreo API Gateways and related components, Choreo PDP agent, Observability and logging APIs along with observability agents, and Flux controller.",docs\choreo-concepts\data-planes.md/Private Data Plane System Components
How do the software components in a private data plane receive updates?,"All software components receive automatic updates, including security patches and bug fixes, through the Flux controller connected to the Choreo Update Management System.",docs\choreo-concepts\data-planes.md/Private Data Plane System Components
What is the general direction of communication between the private data plane and the Choreo control plane?,All communications between the private data plane and the Choreo control plane are outbound from the private data plane.,docs\choreo-concepts\data-planes.md/Private Data Plane Connectivity
What network configuration is necessary if an organization's network restricts all outbound traffic from the private data plane?,"If an organization's network restricts all outbound traffic, it is necessary to permit outbound traffic to the public IP range of the Choreo control plane.",docs\choreo-concepts\data-planes.md/Private Data Plane Connectivity
What protocol does the Choreo PDP agent use for outbound communication with the Choreo control plane (mizzen server)?,The Choreo PDP agent uses WSS protocol for outbound communication with the Choreo control plane (mizzen server).,docs\choreo-concepts\data-planes.md/Private Data Plane Connectivity
How is communication secured between the control plane and the private data plane?,All communication between the control plane and the private data plane is secured using TLS.,docs\choreo-concepts\data-planes.md/Private Data Plane Connectivity
What is the core principle of the private data plane observability architecture regarding data storage?,"The private data plane observability architecture is centered around retaining logs and observability data within the data plane itself, enhancing security, simplifying access, and ensuring compliance.",docs\choreo-concepts\data-planes.md/Private Data Plane Observability
How does the Choreo Console interact with the data plane for observability?,"The Choreo Console in the user's browser directly interacts with APIs in the data plane, reducing potential data routing complexities and ensuring a more secure, direct flow of information.",docs\choreo-concepts\data-planes.md/Private Data Plane Observability
What security measures protect incoming traffic in the Choreo private data plane?,All incoming traffic in the Choreo private data plane is protected by a firewall and must undergo authentication and authorization via the API Gateway.,docs\choreo-concepts\data-planes.md/Private Data Plane Security
How does the Choreo private data plane ensure end-to-end network traffic encryption?,"The Choreo private data plane provides end-to-end network traffic encryption using Cilium transparent encryption, ensuring efficient data path encryption.",docs\choreo-concepts\data-planes.md/Private Data Plane Security
What are the different management models supported by Choreo for private data planes?,"Choreo supports three management models for private data planes (PDPs): WSO2 fully managed (infrastructure and PDP in WSO2 subscription) model, WSO2 fully managed (infrastructure and PDP in customer subscription) model, and Customer self-managed (WSO2 provides installation script and updates) model.",docs\choreo-concepts\data-planes.md/Private Data Plane Management Models
What are Deployment Tracks in Choreo?,"Deployment Tracks in Choreo are structured pathways designed for simplified software component deployment. They function like advanced CI/CD pipelines, ensuring components reach their destinations seamlessly, whether from source code or prebuilt images.",docs\choreo-concepts\deployment-tracks.md/Deployment Tracks Overview
What is the primary purpose of Deployment Tracks?,"Their primary purpose is to establish an organized and structured approach to deployment workflows, thereby minimizing the chances of errors and challenges typically associated with such processes.",docs\choreo-concepts\deployment-tracks.md/Deployment Tracks Overview
What are the two critical challenges that Deployment Tracks address to enhance the API consumer experience?,Deployment Tracks address two critical challenges: Streamlined deployment and Efficient API versioning.,docs\choreo-concepts\deployment-tracks.md/Significance of Deployment Tracks
How do Deployment Tracks enhance the organization and reliability of the deployment process?,"Deployment Tracks serve as well-designed routes for software components, similar to a well-structured express route, thereby enhancing the organization and reliability of the deployment process.",docs\choreo-concepts\deployment-tracks.md/Significance of Deployment Tracks
"How do Deployment Tracks benefit API versioning, especially for managed APIs?","For managed APIs, Deployment Tracks provide a straightforward method for creating API versions that seamlessly interact with previous iterations, simplifying version management for both API creators and consumers.",docs\choreo-concepts\deployment-tracks.md/Significance of Deployment Tracks
What are the two integral approaches Choreo dissects for streamlined deployments using Deployment Tracks?,Choreo dissects two integral approaches: the comprehensive CI/CD integration and the focused CD-Only strategy.,docs\choreo-concepts\deployment-tracks.md/Streamlined Deployments
How is a deployment track linked when using the CI/CD with Deployment Tracks approach?,A deployment track is linked to a particular branch within a GitHub repository in the CI/CD with Deployment Tracks approach.,docs\choreo-concepts\deployment-tracks.md/CI/CD with Deployment Tracks
What is the benefit of linking a deployment track to a GitHub branch in a CI/CD setup?,This connection is useful for handling deployments to various environments and allows easy visualization of deployments to specific environments associated with the selected deployment track on Choreo's Deploy page.,docs\choreo-concepts\deployment-tracks.md/CI/CD with Deployment Tracks
What action triggers an automatic deployment to the development environment when using CI/CD with Deployment Tracks?,"When the automatic deployment functionality is activated, merging a pull request (PR) triggers a deployment to the development environment.",docs\choreo-concepts\deployment-tracks.md/CI/CD with Deployment Tracks
When would a user opt for the CD-Only strategy with Deployment Tracks?,Users would opt for the CD-Only strategy if they prefer to use their own Continuous Integration (CI) systems and want to leverage the deployment track solely as a Continuous Deployment (CD) pipeline.,docs\choreo-concepts\deployment-tracks.md/CD-Only strategy with Deployment Tracks
How are deployment tracks linked in a CD-Only strategy?,"In a CD-Only strategy, deployment tracks can be seamlessly linked to a container registry repository.",docs\choreo-concepts\deployment-tracks.md/CD-Only strategy with Deployment Tracks
What does configuring a deployment track to a container registry repository enable users to do?,This configuration empowers users to effortlessly deploy images sourced directly from the linked container registry repository.,docs\choreo-concepts\deployment-tracks.md/CD-Only strategy with Deployment Tracks
To which type of components does the efficient API versioning section apply?,This section applies only to service components in Choreo.,docs\choreo-concepts\deployment-tracks.md/Efficient API Versioning
What versioning mechanism does Choreo follow for service components?,"Choreo follows a versioning mechanism based on Semantic Versioning (SemVer), but it only includes the major version and minor version with the prefix `v` (e.g., `v1.2`).",docs\choreo-concepts\deployment-tracks.md/Efficient API Versioning
When should the major version be incremented according to Choreo's API versioning approach?,The major version should be incremented when incompatible API changes are made.,docs\choreo-concepts\deployment-tracks.md/Efficient API Versioning
When should the minor version be incremented according to Choreo's API versioning approach?,The minor version should be incremented when functionality is added in a backward-compatible manner.,docs\choreo-concepts\deployment-tracks.md/Efficient API Versioning
What is Semantic Versioning (SemVer)?,"Semantic Versioning (SemVer) is a specification that defines how to assign and increment version numbers for software products, including APIs.",docs\choreo-concepts\deployment-tracks.md/Efficient API Versioning
What is a primary concern when dealing with SaaS APIs regarding updates?,One of the primary concerns is to minimize disruption for API consumers while continuously developing and deploying updates.,docs\choreo-concepts\deployment-tracks.md/Efficient API Versioning
What information do API developers need to specify in the context of deployment tracks for API versioning?,API developers only need to specify the major and minor versions being delivered from a particular deployment track. This information is treated as the API version attribute of a deployment track.,docs\choreo-concepts\deployment-tracks.md/Efficient API Versioning
How can publishers accomplish versioning for internal tracking purposes if not through deployment track API version attributes?,"If the publisher requires versioning for internal tracking purposes, this can be accomplished in Git through the use of Git tags, on GitHub with GitHub releases, and so forth.",docs\choreo-concepts\deployment-tracks.md/Efficient API Versioning
What is an Endpoint in the context of Choreo?,"An Endpoint is a network-exposed function that resides within a component. In Choreo, service and integration components expose one or more endpoints.",docs\choreo-concepts\endpoint.md/Definition and Purpose of an Endpoint
"How are service contracts used with Endpoints in Choreo, and what is the default behavior if a contract is not provided?","Each endpoint in a component can have a service contract (such as OpenAPI or GraphQL SDL) associated with it, which is used to expose the endpoint to consumers. If a contract is absent, Choreo uses `/*` exposed on all HTTP verbs as the default contract to expose the service or integration.",docs\choreo-concepts\endpoint.md/Endpoint Service Contracts
How does Choreo approach API management in relation to Endpoints?,"Choreo considers each endpoint exposed in a component as a single API. This allows for API management to be performed per endpoint for a given component, including lifecycle management and configuration of security settings.",docs\choreo-concepts\endpoint.md/Endpoint as an API and API Management
Where can users find more details on configuring endpoints when developing components in Choreo?,Users can find more information on configuring endpoints when developing components in Choreo by referring to the 'Configure Endpoints' documentation.,docs\choreo-concepts\endpoint.md/Further Configuration Information
"What are environments in Choreo, and what are the default environments provided by the Choreo cloud data plane?","In Choreo, environments are spaces offered to developers to run their applications within a given data plane. By default, the Choreo cloud data plane provides two environments: development and production.",docs\choreo-concepts\environments.md/Choreo Environments Overview
"How are projects in Choreo associated with environments, and can this association vary between different projects?","Each project in Choreo is associated with one or more environments available in the organization. Yes, this association can vary; for example, Project A might utilize dev, staging, and production environments, while Project B might only use development and production environments.",docs\choreo-concepts\environments.md/Project-Environment Association
"What is component promotion in Choreo, and what happens to configuration values when a component is promoted?","Component promotion in Choreo is the process of moving components within a project across available environments. When a component is promoted, its configuration values can be overridden with environment-specific values.",docs\choreo-concepts\environments.md/Component Promotion
What is an organization in Choreo?,An organization in Choreo is defined as a logical grouping of users and user resources.,docs\choreo-concepts\organization.md/Organization Basics
What is required for a first-time user when signing into Choreo?,A first-time user must create an organization and be a member of it when signing in to Choreo.,docs\choreo-concepts\organization.md/Organization Basics
Can users and resources in one Choreo organization access resources in another organization?,"No, users and resources in an organization cannot access resources in another organization unless an admin of the other organization invites them and adds them as a member of that organization.",docs\choreo-concepts\organization.md/Organization Basics
Is a user allowed to create more than one organization in Choreo?,"No, a user cannot create more than one organization.",docs\choreo-concepts\organization.md/Organization Basics
How can a user switch between organizations in Choreo?,"If a user is a member of more than one organization, they can switch by selecting the required organization from the 'Organization' list in the Choreo Console header.",docs\choreo-concepts\organization.md/Switch Organizations
How does Choreo manage user permissions?,Choreo manages user permissions with groups and roles.,docs\choreo-concepts\organization.md/Manage User Permissions
What is a group in Choreo?,"A group in Choreo is a collection of users, each with one or more roles assigned to them.",docs\choreo-concepts\organization.md/User Groups
How do users within a group inherit permissions?,"Users within a group inherit the permissions associated with the roles assigned to that group. For instance, if a user is added to the `API Publisher` group, they will automatically receive the `API Publisher` role.",docs\choreo-concepts\organization.md/User Groups
Name some of the predefined groups in Choreo and their associated roles.,"Choreo comes with predefined groups such as: API Publisher (with API Publisher role), API Subscriber (with API Subscriber role), Admin (with Admin role), Billing Admin (with Billing Admin role), Choreo DevOps (with Choreo DevOps role), Developer (users who develop, deploy, and manage cloud native applications), and External API Subscriber (with External API Subscriber role).",docs\choreo-concepts\organization.md/User Groups
What is an important consideration when creating a new group to invite members in Choreo?,"When creating a new group to invite members, it is important to assign a role to the group to ensure users have the required permissions.",docs\choreo-concepts\organization.md/User Groups
What are the responsibilities of the 'Admin' role in Choreo?,"The 'Admin' role performs all administrative tasks including user management, Developer Portal customization, project management, analytics configuration, and domain management.",docs\choreo-concepts\organization.md/User Roles
What are the responsibilities of the 'API Publisher' role in Choreo?,"The 'API Publisher' role discovers, creates, publishes, deletes, tests, and manages APIs.",docs\choreo-concepts\organization.md/User Roles
What are the responsibilities of the 'API Subscriber' role in Choreo?,"The 'API Subscriber' role subscribes to APIs, manages subscriptions and applications, and generates and manages API keys.",docs\choreo-concepts\organization.md/User Roles
What are the responsibilities of the 'Billing Admin' role in Choreo?,"The 'Billing Admin' role handles billing administration including viewing tiers, managing organizations and invoices, and managing subscriptions and payment methods.",docs\choreo-concepts\organization.md/User Roles
What are the responsibilities of the 'Choreo Platform Engineer' role?,"The 'Choreo Platform Engineer' role performs infrastructure, governance, service mesh, and monitoring tasks.",docs\choreo-concepts\organization.md/User Roles
"Which Choreo role has been replaced, and how does this affect existing organizations?","The 'Choreo DevOps' role has been replaced with the 'Choreo Platform Engineer' role. However, organizations that previously had the 'Choreo DevOps' role will continue to see and use both roles with their existing functionality.",docs\choreo-concepts\organization.md/User Roles
What is the purpose of the Organization ID in Choreo?,The Organization ID serves as a unique identifier for each organization.,docs\choreo-concepts\organization.md/Organization ID
How can a user find their Organization ID in Choreo?,"To get the Organization ID, sign in to https://console.choreo.dev/, select your organization from the 'Organization' list in the header, click 'Settings' in the left navigation, then click the 'Organization' list in the header on the settings page, and finally click 'Copy ID' under 'Organization'.",docs\choreo-concepts\organization.md/Organization ID
What is the Organization Handle in Choreo?,The organization handle is a unique string that directly corresponds to your organization's name.,docs\choreo-concepts\organization.md/Organization Handle
How can a user find their Organization Handle in Choreo?,"To get the organization handle, sign in to https://console.choreo.dev/, select your organization from the 'Organization' list in the header, click 'Settings' in the left navigation, and then click 'Copy Handle' under 'Organization'.",docs\choreo-concepts\organization.md/Organization Handle
"What is a project in Choreo, and what does it consist of?",A project in Choreo is a logical group of related components that typically represent a single cloud native application. It consists of one or more components.,docs\choreo-concepts\project.md/Project Definition and Structure
How are components within a Choreo project typically organized in terms of source code repositories?,All components within a project can ideally be (but is not restricted to) in a single GitHub repository under different paths. This organization is also known as the monorepo architecture.,docs\choreo-concepts\project.md/Source Code Organization
How are components within a Choreo project deployed in a Kubernetes environment?,"At deployment time, all components within a given project are deployed into a single namespace of the Kubernetes cluster.",docs\choreo-concepts\project.md/Deployment Characteristics
What are the different exposure options for components within a Choreo project?,"Components within a project can be exposed to the public internet, internally to the rest of the organization, or privately within the project only.",docs\choreo-concepts\project.md/Component Exposure
How is a project in Choreo represented in terms of architectural patterns?,A project in Choreo is represented as a cell with regard to the Cell-based architecture.,docs\choreo-concepts\project.md/Architectural Representation
What does the initial diagram in the documentation depict regarding Choreo's architecture?,The initial diagram depicts the high-level resources and their relationships within Choreo's resource hierarchy.,docs\choreo-concepts\resource-hierarchy.md/Resource Hierarchy
How are data planes related to organizations and projects in Choreo?,"Data planes are connected to the organization and are available for all projects within that organization. When an environment is created in a project, the data plane connected to the organization is linked with an automatically generated Kubernetes namespace.",docs\choreo-concepts\resource-hierarchy.md/Organizations and data planes
"What capability does Choreo offer regarding Kubernetes clusters and environments, and what is its primary benefit?",Choreo allows multiple Kubernetes clusters to be associated with an environment. This enables users to build highly resilient and resource-efficient solutions that utilize multiple clusters.,docs\choreo-concepts\resource-hierarchy.md/Environments and data planes
How does Choreo facilitate multi-cluster deployment?,"Choreo simplifies multi-cluster deployment by synchronizing applications and workloads between associated clusters in an environment, allowing it to be performed with a single click.",docs\choreo-concepts\resource-hierarchy.md/Environments and data planes
Is it mandatory to use a separate Kubernetes cluster for each environment in Choreo?,"No, it is not necessary to use a different cluster per environment; multiple environments can be created on the same cluster. The diagram provided is an example of a specific solution, not a mandatory configuration.",docs\choreo-concepts\resource-hierarchy.md/Environments and data planes
"To what do components belong in Choreo, and how are environments provisioned in relation to them?","Components belong to a project in Choreo, and environments are provisioned per project.",docs\choreo-concepts\resource-hierarchy.md/Components and environments
Describe the deployment and promotion process for components in Choreo.,"When a component is deployed, it is deployed as a container to the specified environment. Once deployed, the container image can be promoted across the environments available in the project.",docs\choreo-concepts\resource-hierarchy.md/Components and environments
