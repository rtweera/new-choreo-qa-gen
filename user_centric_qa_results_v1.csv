question,answer,source,topic
What is the Choreo Marketplace and what is its main purpose?,"The Choreo Marketplace is a platform designed to promote and facilitate the reuse and sharing of services. It allows you to share all services deployed in Choreo, and easily browse, search, and refer to service definitions, documentation, and instructions on how to use them.",docs\choreo-concepts\choreo-marketplace.md/Choreo Marketplace,Choreo Marketplace
How can I find specific services within the Choreo Marketplace?,"You can discover services in the Choreo Marketplace using either the top search bar or by applying various filter criteria. The search bar allows universal searching, while the left-hand side filter panel provides specific filtering options.",docs\choreo-concepts\choreo-marketplace.md/Discover services,Discover services
What search criteria can I use to look for services in the Marketplace?,"When using the top search bar in the Choreo Marketplace, you can search for text within the following attributes: the service **Name**, **Label**s, **Content** (which includes the overview, summary, and documentation), or you can select **All** to search across all these criteria simultaneously.",docs\choreo-concepts\choreo-marketplace.md/Discover services - Search,Discover services - Search
What are the filtering options available in the Choreo Marketplace?,"The Choreo Marketplace provides filtering capabilities through its left-hand side filter panel. You can filter services by:
- **Type**: Choose between ""Internal"" (services deployed within Choreo) and ""Third-party"" (services running externally but independently added to the Marketplace).
- **Network Visibility**: Select from ""Public"" (services exposed publicly), ""Organization"" (services exposed across the entire organization), or ""Project"" (services exposed at the project level).",docs\choreo-concepts\choreo-marketplace.md/Discover services - Filter,Discover services - Filter
What kind of information can I see when I explore a service in detail?,"When you click on a service card to open its detailed view, you'll see the service name, summary, version, labels, and service icon in the header. The service content is further organized into four tabs:
- **Overview**: Displays the service overview provided by the service developer.
- **API definition**: Includes the API definition for the service, extracted from the `component.yaml` file.
- **How to use**: Provides instructions on how to use the selected service, including how to create a connection.
- **Related documents**: Includes any additional content the user has provided as documents through the Manage -> Marketplace section of the component.",docs\choreo-concepts\choreo-marketplace.md/Explore a service,Explore a service
How do services get added to the Choreo Marketplace?,"Choreo services are automatically added to the Marketplace upon their initial deployment to any environment. During this deployment, Choreo effortlessly collects essential details such as the component name, endpoint name, description, and service definitions, using them to generate the corresponding service entries. The service name in the Marketplace follows the convention of `component name - endpoint name`.",docs\choreo-concepts\choreo-marketplace.md/Add a service to the Choreo Marketplace - Add a Choreo service,Add a service to the Choreo Marketplace - Add a Choreo service
How does service versioning work in the Choreo Marketplace?,"In the Choreo Marketplace, service versions are displayed in their major version format (e.g., `v1`, `v2`). Each service entry represents the *latest* version of the service within its major version, following semantic versioning principles. For example, if you have `v1.0`, `v1.1`, and `v1.2`, the Marketplace will display `v1` representing `v1.2`. When a new minor version of an already deployed service is released, the corresponding service in the Marketplace automatically updates to reflect this latest version within the same major version.",docs\choreo-concepts\choreo-marketplace.md/Service versioning in the Choreo Marketplace,Service versioning in the Choreo Marketplace
"If I connect to a service from the Marketplace, how does it handle new minor versions?","When you use a service from the Choreo Marketplace as a dependency, the dependent service's traffic is automatically routed to the latest version of the corresponding service within the same major version. This semantic-version-based intelligent routing ensures that your dependencies remain up-to-date without requiring manual updates within a major version. For instance, if you connect to `Bar` v1, and `Bar` v1.3 is subsequently released, traffic from your component will automatically route to `Bar` v1.3.",docs\choreo-concepts\choreo-marketplace.md/Service versioning in the Choreo Marketplace - Semantic-version-based intelligent routing,Service versioning in the Choreo Marketplace - Semantic-version-based intelligent routing
Can I edit or update service information in the Choreo Marketplace?,"Yes, you can edit services in the Choreo Marketplace. During redeployment to any environment, Choreo automatically updates service definitions, network visibility settings, and descriptions in the Marketplace.",docs\choreo-concepts\choreo-marketplace.md/Edit services in the Choreo Marketplace,Edit services in the Choreo Marketplace
What is Choreo's approach to CI/CD?,"Choreo provides a streamlined continuous integration and continuous deployment (CI/CD) experience designed to efficiently deploy applications and services across multiple environments. It emphasizes an isolated environment setup for each project, where all components within that project share the same environments.",docs\choreo-concepts\ci-cd.md/CI/CD,CI/CD
"How do environments work in Choreo, and can I customize them?","In Choreo, an environment is an isolated deployment area with restricted network and resource access, meaning services deployed in one environment cannot communicate with those in another. The Choreo cloud data plane offers two default environments: development and production. However, if you are in a private data plane organization, you have the flexibility to customize and create multiple environments based on your specific requirements.",docs\choreo-concepts\ci-cd.md/CI/CD,CI/CD
"What does the 'build once, deploy many' strategy mean in Choreo?","The 'build once, deploy many' strategy means that an application is built only once (either per commit if automatic build on commit is enabled, or based on a selected commit during a manual build). This single built artifact is then promoted to subsequent environments. This approach is beneficial because it allows you to thoroughly test changes in lower, non-production environments like development before promoting the verified build to production.",docs\choreo-concepts\ci-cd.md/CI/CD,CI/CD
"How does Choreo handle configurations and secrets for different environments, and are they secure?","Choreo injects configurations and secrets, which you maintain at the environment level, directly into components at runtime. This ensures a strict separation of environment-specific configurations from your source code, meaning the code and built container remain unchanged even if configurations vary across environments. These can include credentials for databases, caches, external cloud services like Amazon S3, or external APIs. All configurations and secrets are encrypted at rest and in transit and stored in a secure vault. In a private data plane organization, you also have the option to store them in your own infrastructure.",docs\choreo-concepts\ci-cd.md/CI/CD / Configurations,CI/CD / Configurations
What are the typical steps involved in a Choreo build pipeline?,"Choreo auto-generates build pipelines that generally include building a container image from the provided source code or a Dockerfile for a specific commit, running security and vulnerability scans (if applicable based on component type), pushing the container image to a container registry (Choreo-managed for cloud data plane, user-owned for private data plane), and updating service endpoints and API specifications from the provided repository (if applicable). Some buildpacks also support integrating unit tests.",docs\choreo-concepts\ci-cd.md/Build,Build
Can I integrate unit tests into the build process?,"Yes, some buildpacks in Choreo support integrating unit tests directly into the build pipeline. For more detailed information on how to do this, you can refer to the documentation on 'Integrate Unit Tests into the Build Pipeline'.",docs\choreo-concepts\ci-cd.md/Build,Build
What are 'repeatable builds' in Choreo?,"Repeatable builds in Choreo mean that if you initiate multiple builds from the exact same Git commit, they will consistently generate Docker images with identical behavior. It's important to note that Choreo preserves only the most recent version of the Docker image created from a particular code version.",docs\choreo-concepts\ci-cd.md/Build / Repeatable builds,Build / Repeatable builds
"How do I trigger a build in Choreo, and can it be automated?","You can manually trigger a build by navigating to the **Build** page and clicking **Build Latest**, with the option to select a particular commit if needed. To automate builds, you can enable **Auto Build on Commit**, which will automatically trigger a build with each new commit. Additionally, Admin and Choreo DevOps users have the capability to trigger builds using specific tags from the connected Git repository, though this action is typically reserved for critical, time-sensitive scenarios as it bypasses the standard branch-based deployment process.",docs\choreo-concepts\ci-cd.md/Build / Trigger a build,Build / Trigger a build
Where can I view the logs for my builds?,"You can view build logs for specific builds directly on the **Build** page. To access detailed information for a particular build, simply click on **View Details** corresponding to that build.",docs\choreo-concepts\ci-cd.md/Build / Build logs,Build / Build logs
"How do I deploy an image in Choreo, and can I automate deployments?","Once an image is built in Choreo, you can deploy it via the **Deploy** page. You have two main approaches: you can **Manually deploy** by going to the **Set Up** card and clicking **Deploy**, or you can **Automatically deploy on build** by enabling this option on the **Set Up** card. Enabling automatic deployment will initiate deployment automatically upon the completion of an automatic build. Note that to enable **Auto Deploy on Build**, you must first enable **Auto Build on Commit**.",docs\choreo-concepts\ci-cd.md/Deployment,Deployment
Are there any special considerations for deploying Ballerina components?,"Yes, for Ballerina components, you must trigger the very first build manually to ensure that Choreo applies the required configurations to the development environment; automatic builds can be enabled subsequently. Choreo also automatically checks the configurable values defined in your Ballerina source code against those applied in an environment during deployment and promotion. If you've changed the configurables, auto-build pipelines might fail as a precaution to prevent component crashes at runtime due to missing configurations. This configurable verifying capability is only available for Ballerina components. For Dockerfile-based components, you need to manually manage and update configurations and secrets in environments ahead of time and ensure backward compatibility.",docs\choreo-concepts\ci-cd.md/Deployment,Deployment
What happens if I change configurations after a component is deployed?,"Once Choreo deploys a component with configurations, those configurations become immutable. Any subsequent change to these configurations will necessitate and result in a new deployment.",docs\choreo-concepts\ci-cd.md/Deployment / Immutable deployments,Deployment / Immutable deployments
"How do I promote a component from one environment to another, like from development to production?","Choreo adopts a 'build once, deploy many' strategy, meaning a container is built once per GitHub commit and then promoted to subsequent higher environments. You can manually promote a component across environments by going to its **Deploy** page.",docs\choreo-concepts\ci-cd.md/Deployment / Promote a component to a higher environment,Deployment / Promote a component to a higher environment
"What's the difference between environment-independent and environment-specific configurations, and how do I manage them?","Choreo allows for both: **Environment-independent configurations** apply to all environments. To change these, go to the component's **Deploy** page, make the necessary changes via the **Set Up** card, and then trigger a new deployment to the initial environment before promoting the component to higher environments. **Environment-specific configurations** apply only to a particular environment. To change these, go to the component's **Deploy** page, make the necessary changes via the specific environment card, and then trigger a new deployment for that particular environment.",docs\choreo-concepts\ci-cd.md/Configurations,Configurations
How can I monitor the execution of my scheduled or manual tasks?,"For scheduled and manual task components, you can track and monitor their executions by navigating to the **Execute** page from the left navigation menu. This page provides current and historic execution details, including a quick snapshot of recent activity (total count within the last 30 days), unique execution IDs, trigger times, and relevant revision information. You can also click on a specific execution to access its associated logs for deeper analysis and troubleshooting.",docs\choreo-concepts\ci-cd.md/Task execution,Task execution
Does Choreo ensure my application stays online during deployments or promotions?,"Yes, Choreo performs rolling updates to ensure zero downtime between deployments and promotions. A new build undergoes a health check before traffic is switched to it from the current build. By configuring the necessary health checks for your component, you can prevent the deployment and promotion of unhealthy versions.",docs\choreo-concepts\ci-cd.md/Zero-downtime deployments,Zero-downtime deployments
What exactly is a 'component' in Choreo?,"In Choreo, a component represents a single unit of work within a cloud-native application. It's typically a microservice, an API, or a job/task, and it serves as Choreo's fundamental unit of deployment.",docs\choreo-concepts\component.md/Component,Component
How does Choreo handle the deployment of individual parts of my application?,"Choreo uses a component as its unit of deployment. This means that each component maps directly to a single pod in the Kubernetes cluster at deployment time, allowing you to deploy, manage, and scale each component independently.",docs\choreo-concepts\component.md/Component,Component
Where does Choreo expect to find the code or build instructions for a component?,Each component in Choreo is attached to a specific directory path within a Git repository. This directory must contain either the program's source code or a Dockerfile with the necessary build instructions.,docs\choreo-concepts\component.md/Component,Component
What are some examples of the different types of components Choreo supports?,"Choreo supports various component types designed for different use cases, including services, API proxies, integrations, and web applications.",docs\choreo-concepts\component.md/Component,Component
Do different component types in Choreo offer unique features?,"Yes, each component type in Choreo comes with unique features tailored to its characteristics. For example, a scheduled integration component can accept a cron expression to schedule an integration job or task.",docs\choreo-concepts\component.md/Component,Component
Can I manage and scale different parts of my application independently within Choreo?,"Absolutely. Since a component is Choreo's unit of deployment and maps to a single Kubernetes pod, you have the flexibility to deploy, manage, and scale each component independently.",docs\choreo-concepts\component.md/Component,Component
What are 'Connections' in Choreo and why would I use them?,"In Choreo, 'Connections' are a feature that allows you to integrate services you intend to deploy on Choreo with other services already on Choreo or with external resources. Their main purpose is to help you create integrated solutions by enabling communication between different services and resources.",docs\choreo-concepts\connections.md/Connections,Connections
How do I use a Connection in my service once it's created in Choreo?,"Once you create a connection, Choreo provides you with a Connection ID and a set of connection parameters. You then configure your service to establish a connection using this Connection ID and map the connection parameters to environment variable names within your Choreo component. Your service implementation can then read these environment variables to retrieve the values and create a programmatic connection to the desired service.",docs\choreo-concepts\connections.md/Connections,Connections
What are the benefits of using Choreo's Connections for integrating services?,"Using Connections ensures that the connection parameter values and the service connection creation remain loosely coupled. This approach provides developers with flexibility and ease of maintenance, as Choreo dynamically injects the necessary values into environment variables at runtime.",docs\choreo-concepts\connections.md/Connections,Connections
What's the difference between Project Connections and Component Connections in Choreo?,"The primary difference lies in their visibility and scope. Project Connections are created at the project level and can be used by *any component* within that particular project. In contrast, Component Connections are defined at the individual component level and can only be used by *that specific component*.","docs\choreo-concepts\connections.md/Project Connections, Component Connections","Project Connections, Component Connections"
When should I use a Project Connection instead of a Component Connection? Can you give an example?,"You should use a Project Connection when you want to share a connection to a service or resource across multiple components within the same project. For example, if you want all components in your project to reuse a third-party service like Twilio, you would create a Project Connection for it. Components can then refer to this connection using its Connection ID.",docs\choreo-concepts\connections.md/Project Connections,Project Connections
When is it more appropriate to use a Component Connection?,"It's more appropriate to use a Component Connection when the connection is specific to a single component and doesn't need to be shared across the entire project. For instance, if only a particular component needs to connect to a legacy service, you would create a Component Connection for that specific integration.",docs\choreo-concepts\connections.md/Component Connections,Component Connections
How do Project Connections handle OAuth security when shared across multiple components?,"For Project Connections created to consume Choreo services under the OAuth security scheme, they will share the same OAuth application across the project. This means any component reusing such a connection will use the same client ID and client secret.",docs\choreo-concepts\connections.md/Project Connections,Project Connections
"If my component consumes multiple Choreo services, can Component Connections help with OAuth?","Yes, if your component consumes more than one Choreo service, the Component Connections created to consume those services under the OAuth security scheme can share the same OAuth application. This is achieved by sharing the same client ID and secret between all such connections within that specific component.",docs\choreo-concepts\connections.md/Component Connections,Component Connections
What are the core components of Choreo's architecture?,Choreo's architecture is built around two main components: the control plane and the data plane.,docs\choreo-concepts\data-planes.md/Data Planes,Data Planes
What is the primary role of the Choreo control plane?,"The control plane is responsible for essential administrative tasks like managing organizations, users, and projects. It also oversees the entire application development lifecycle, from creation to deployment, including governance and observability. It operates as a SaaS platform that manages both cloud and private data planes.",docs\choreo-concepts\data-planes.md/Data Planes,Data Planes
Who are the typical users or personas that interact with the Choreo control plane?,"The Choreo control plane caters to a diverse range of user personas, including CIOs, architects, developers, DevOps engineers, site reliability engineers (SREs), and platform engineers.",docs\choreo-concepts\data-planes.md/Data Planes,Data Planes
"What exactly is a Choreo data plane, and what types of applications can be deployed there?","The data plane is the environment where your user applications are deployed, based on the configurations you set in the control plane. You can deploy various types of applications, such as services, web applications, APIs, integrations, and scheduled tasks. It supports a polyglot approach, meaning applications can be written in different programming languages.",docs\choreo-concepts\data-planes.md/Data Planes,Data Planes
How does Choreo ensure the security and containment of my application's runtime data and traffic?,Choreo ensures strict containment by restricting all traffic related to the runtime of user applications to within the Choreo data plane itself. This design helps keep your user data securely within its boundaries.,docs\choreo-concepts\data-planes.md/Data Planes,Data Planes
"What are the two different types of data planes offered by Choreo, and how do they differ?","Choreo offers two distinct data plane types: cloud data planes and private data planes (PDPs). A cloud data plane uses a multi-tenanted infrastructure, providing a shared yet secure environment for deploying user applications. In contrast, a private data plane offers dedicated infrastructure specifically for a single organization, ensuring an enhanced layer of privacy and control.",docs\choreo-concepts\data-planes.md/Data Planes,Data Planes
Where can I deploy a Choreo private data plane (PDP)?,"Choreo private data planes are highly flexible and can be deployed with almost all major cloud providers, including Azure, AWS, and GCP. They are also compatible with on-premises infrastructure.",docs\choreo-concepts\data-planes.md/Private data planes - Infrastructure,Private data planes - Infrastructure
What are the essential infrastructure requirements for setting up a private data plane?,"To set up a private data plane, you'll need upstream-compatible Kubernetes clusters, a container registry, a key vault (for secret storage), and a logging service or log storage solution.",docs\choreo-concepts\data-planes.md/Private data planes - Infrastructure,Private data planes - Infrastructure
How are the system components installed in a Choreo private data plane?,The Choreo PDP system components are installed using a Helm installation on your Kubernetes infrastructure.,docs\choreo-concepts\data-planes.md/Private data planes - System components,Private data planes - System components
What specific software components are installed when setting up a Choreo private data plane?,"During the Helm installation, the following software components are set up: Cilium CNI and service mesh, Choreo API Gateways and their related components, the Choreo PDP agent, observability and logging APIs along with their agents, and the Flux controller.",docs\choreo-concepts\data-planes.md/Private data planes - System components,Private data planes - System components
"How are updates, including security patches and bug fixes, managed for the software components within a private data plane?","All software components within the private data plane receive automatic updates, including security patches and bug fixes. This is managed through the Flux controller, which is connected to the Choreo Update Management System.",docs\choreo-concepts\data-planes.md/Private data planes - System components,Private data planes - System components
"Does the private data plane need to communicate with the Choreo control plane, and what are the network requirements for this communication?","Yes, the private data plane requires communication with the Choreo control plane for various management activities. All these communications are outbound from the private data plane, meaning you don't need to open any specific inbound IP:Port. However, if your organization's network restricts all outbound traffic, you will need to permit outbound traffic to the public IP range of the Choreo control plane.",docs\choreo-concepts\data-planes.md/Private data planes - Connectivity with the control plane,Private data planes - Connectivity with the control plane
How does Choreo ensure data privacy and compliance for logs and observability data within a private data plane?,"Choreo's private data plane observability architecture is designed with a strong commitment to data privacy and compliance. Logs and observability data are retained directly within the data plane itself. The Choreo Console in the user's browser interacts directly with APIs in the data plane, minimizing data transfer points and ensuring data locality, which helps align with regulatory standards like GDPR and CCPA.",docs\choreo-concepts\data-planes.md/Private data planes - Observability architecture,Private data planes - Observability architecture
What are the key security features implemented in the Choreo private data plane?,"The Choreo private data plane offers extensive, production-grade security. This includes firewall protection for all incoming traffic, mandatory authentication and authorization via the API Gateway, and end-to-end network traffic encryption using Cilium transparent encryption for efficient data path security.",docs\choreo-concepts\data-planes.md/Private data planes - Security,Private data planes - Security
What are the different management models available for Choreo private data planes?,"Choreo supports three management models for private data planes, fostering collaboration between WSO2 and customers: WSO2 fully managed (where both infrastructure and PDP are in a WSO2 subscription), WSO2 fully managed (where infrastructure and PDP are in the customer's subscription), and Customer self-managed (where WSO2 provides the installation script and updates, but the customer manages the infrastructure).",docs\choreo-concepts\data-planes.md/Private data planes - Management models,Private data planes - Management models
What exactly are Deployment Tracks in Choreo and what's their main purpose?,"Deployment Tracks in Choreo are structured pathways designed for simplified software component deployment. They function like advanced CI/CD pipelines, ensuring your components are delivered seamlessly, whether they originate from source code or prebuilt images. Their primary purpose is to establish an organized and structured approach that significantly reduces errors and challenges typically associated with deployment workflows.",docs\choreo-concepts\deployment-tracks.md/Deployment Tracks,Deployment Tracks
Why should I use Deployment Tracks? What are the key benefits they offer?,"Deployment Tracks offer practical solutions to enhance the API consumer experience by addressing two critical challenges: streamlined deployment and efficient API versioning. They serve as well-designed routes for your software components, improving the organization and reliability of the deployment process. For managed APIs, they provide a straightforward method for creating new API versions that seamlessly interact with previous iterations, simplifying version management for both creators and consumers.",docs\choreo-concepts\deployment-tracks.md/The significance of Deployment Tracks,The significance of Deployment Tracks
"How do Deployment Tracks integrate with a full CI/CD pipeline, especially if I'm using GitHub?","When using a full CI/CD approach, a deployment track is linked to a specific branch within a GitHub repository. This connection allows you to easily visualize deployments to various environments on Choreo's Deploy page. Furthermore, the deployment track can initiate automatic deployments for the linked branch; for instance, merging a pull request (PR) will trigger a deployment to the development environment.",docs\choreo-concepts\deployment-tracks.md/CI/CD with Deployment Tracks,CI/CD with Deployment Tracks
Can I use Deployment Tracks if I already have my own Continuous Integration (CI) system and only want Choreo for Continuous Deployment (CD)?,"Yes, you can use the CD-Only strategy with Deployment Tracks. If you prefer to use your own CI systems, you can seamlessly link deployment tracks to a container registry repository. This configuration enables you to effortlessly deploy images directly sourced from that linked container registry repository, leveraging Choreo purely as a CD pipeline.",docs\choreo-concepts\deployment-tracks.md/CD-Only strategy with Deployment Tracks,CD-Only strategy with Deployment Tracks
How do Deployment Tracks handle API versioning for service components in Choreo?,"For service components, Deployment Tracks facilitate effective API versioning by following a mechanism based on Semantic Versioning (SemVer), specifically using the major and minor versions with a 'v' prefix (e.g., `v1.2`). API developers only need to specify the major and minor versions being delivered from a particular deployment track, which is treated as the API version attribute. This approach helps minimize disruption for API consumers when updates are continuously deployed.",docs\choreo-concepts\deployment-tracks.md/Efficient API versioning,Efficient API versioning
When should I increment the major versus the minor version of my API when using Deployment Tracks in Choreo?,"In Choreo's API versioning with Deployment Tracks, you should increment the major version when you introduce incompatible API changes. You should increment the minor version when you add new functionality in a backward-compatible manner. This aligns with the Semantic Versioning specification.",docs\choreo-concepts\deployment-tracks.md/Efficient API versioning,Efficient API versioning
"If Choreo's API versioning focuses on major and minor versions, how do I manage patch updates or internal version tracking?","While Choreo's API version attribute for deployment tracks focuses on major and minor versions (as these are typically what concern API consumers most), changes that don't introduce breaking or additive modifications are categorized as patch updates. These should ideally not disrupt API clients. For internal tracking purposes, such as managing patch versions or other granular releases, publishers can use external tools like Git tags, GitHub releases, or similar mechanisms.",docs\choreo-concepts\deployment-tracks.md/Efficient API versioning,Efficient API versioning
What exactly is an Endpoint in Choreo?,"In Choreo, an Endpoint is a network-exposed function that resides within a component. Specifically, service and integration components expose one or more endpoints.",docs\choreo-concepts\endpoint.md/Endpoint Definition,Endpoint Definition
"Do I need to provide a service contract for an endpoint in Choreo, and what happens if I don't?","Each endpoint in a component can have a service contract, such as OpenAPI or GraphQL SDL, associated with it. This contract is used to expose the endpoint to consumers. If a contract is not provided, Choreo uses `/* exposed on all HTTP verbs` as the default contract to expose the service or integration.",docs\choreo-concepts\endpoint.md/Service Contract,Service Contract
How does Choreo handle API management for endpoints? Can I manage each endpoint separately?,"Yes, Choreo considers each endpoint exposed in a component as a single API. This allows you to perform API management per endpoint for a given component.",docs\choreo-concepts\endpoint.md/API Management,API Management
What kind of API management tasks can I perform for an individual endpoint in Choreo?,"For each individual endpoint in a component, Choreo allows you to perform tasks such as lifecycle management and configuring security settings.",docs\choreo-concepts\endpoint.md/API Management,API Management
Where can I find more detailed instructions on configuring endpoints when developing components in Choreo?,You can learn how to configure endpoints when developing components in Choreo by referring to the 'Configure Endpoints' documentation.,docs\choreo-concepts\endpoint.md/Endpoint Configuration,Endpoint Configuration
What are environments in Choreo and why are they used?,"In Choreo, environments are designated spaces within a data plane where you can run your applications. They are used to manage and deploy applications through different stages, such as development, testing, and production.",docs\choreo-concepts\environments.md/Environments,Environments
What environments does Choreo provide by default?,"By default, the Choreo cloud data plane comes with two pre-configured environments: development and production.",docs\choreo-concepts\environments.md/Environments,Environments
Can different projects in Choreo use a customized set of environments?,"Yes, each project in Choreo can be associated with one or more environments that are available in your organization. For example, one project might use development, staging, and production, while another might only use development and production.",docs\choreo-concepts\environments.md/Environments,Environments
How do I move my application components between different environments in Choreo?,You can move your application components between environments by 'promoting' them within a project across the available environments.,docs\choreo-concepts\environments.md/Environments,Environments
Is it possible to have different configurations for the same component across different environments?,"Yes, when you promote a component to a new environment, its configuration values can be overridden with environment-specific values. This allows for tailored settings for each environment.",docs\choreo-concepts\environments.md/Environments,Environments
What is an organization in Choreo and why is it important for new users?,"An organization in Choreo is a logical grouping of users and their associated resources. It's crucial for first-time users because they must create an organization and be a member of it when signing in to Choreo. This structure also dictates access, as users and resources within one organization cannot access resources in another unless an admin of the other organization explicitly invites them and adds them as a member.",docs\choreo-concepts\organization.md/Organization,Organization
"Can I create more than one organization in Choreo, or join multiple organizations?","You cannot create more than one organization in Choreo. However, you can be a member of multiple organizations if an admin from another organization invites you and adds you as a member.",docs\choreo-concepts\organization.md/Organization,Organization
How do I switch between different organizations if I'm a member of more than one?,"If you are a member of multiple organizations, you can easily switch between them. To do this, select the required organization from the 'Organization' list located in the Choreo Console header.",docs\choreo-concepts\organization.md/Switch organizations,Switch organizations
How does Choreo manage user permissions?,Choreo manages user permissions through a system that utilizes both groups and roles.,docs\choreo-concepts\organization.md/Manage user permission,Manage user permission
"What is a group in Choreo, and how do users inherit permissions from them?","A group in Choreo is a collection of users, where each user has one or more roles assigned to them. Users who are part of a group automatically inherit the permissions associated with the roles assigned to that specific group. For example, if you're added to the `API Publisher` group, you will automatically receive the `API Publisher` role.",docs\choreo-concepts\organization.md/Groups,Groups
What are the predefined user groups available in Choreo?,"Choreo comes with several predefined groups, each configured with specific roles: `API Publisher`, `API Subscriber`, `Admin`, `Billing Admin`, `Choreo DevOps`, `Developer`, and `External API Subscriber`.",docs\choreo-concepts\organization.md/Groups,Groups
Can you describe the different roles in Choreo and what each role allows a user to do?,"Choreo defines the following roles:
- **Admin**: Performs all administrative tasks, including user management, Developer Portal customization, project management, analytics configuration, and domain management.
- **API Publisher**: Discovers, creates, publishes, deletes, tests, and manages APIs.
- **API Subscriber**: Subscribes to APIs, manages subscriptions and applications, and generates and manages API keys.
- **Billing Admin**: Handles billing administration, including viewing tiers, managing organizations and invoices, and managing subscriptions and payment methods.
- **Choreo DevOps**: Manages deployment, monitoring, and reliability of components in Choreo.
- **Choreo Platform Engineer**: Performs infrastructure, governance, service mesh, and monitoring tasks.
- **Developer**: Develops, deploys, and manages cloud-native applications at scale.
- **External API Subscriber**: Consumes APIs with Developer Portal access and can join an organization exclusively for API usage.
(Note: The 'Environment Manager' role is deprecated.)",docs\choreo-concepts\organization.md/Roles,Roles
What is the relationship between the 'Choreo DevOps' and 'Choreo Platform Engineer' roles?,"The `Choreo DevOps` role has been replaced by the `Choreo Platform Engineer` role. However, organizations that previously had the `Choreo DevOps` role will continue to see and use both roles with their existing functionality.",docs\choreo-concepts\organization.md/Roles,Roles
How can I find my organization's unique ID in Choreo?,"To get your organization ID, follow these steps:
1. Go to [https://console.choreo.dev/](https://console.choreo.dev/) and sign in.
2. Click on the 'Organization' list in the header and select your organization.
3. In the left navigation, click 'Settings'.
4. In the header, click the 'Organization' list again to open the organization level settings page.
5. Under 'Organization', click 'Copy ID'.",docs\choreo-concepts\organization.md/Organization ID,Organization ID
Where can I find my organization's handle in Choreo?,"To get your organization handle, which is a unique string corresponding to your organization's name, follow these steps:
1. Go to [https://console.choreo.dev/](https://console.choreo.dev/) and sign in.
2. Click on the 'Organization' list in the header and select your organization.
3. In the left navigation, click 'Settings'.
4. Under 'Organization', click 'Copy Handle'.",docs\choreo-concepts\organization.md/Organization Handle,Organization Handle
What exactly is a 'project' in Choreo?,"In Choreo, a project is defined as a logical group of related components that typically represent a single cloud-native application.",docs\choreo-concepts\project.md/Project Definition,Project Definition
How many components can be included in a Choreo project?,A project in Choreo consists of one or more components.,docs\choreo-concepts\project.md/Project Composition,Project Composition
Can I use a single GitHub repository for all components within a Choreo project?,"Yes, all components within a project can ideally be (though not restricted to) in a single GitHub repository under different paths. This setup is also known as the monorepo architecture.",docs\choreo-concepts\project.md/GitHub Repository / Monorepo,GitHub Repository / Monorepo
Where are the components of a Choreo project deployed in a Kubernetes cluster?,"At deployment time, all components within a given project are deployed into a single namespace of the Kubernetes cluster.",docs\choreo-concepts\project.md/Deployment / Kubernetes Namespace,Deployment / Kubernetes Namespace
What are the different ways components within a Choreo project can be exposed?,"Components within a project can be exposed to the public internet, internally to the rest of the organization, or privately within the project only.",docs\choreo-concepts\project.md/Component Exposure,Component Exposure
Does a Choreo project align with any specific architectural pattern?,"Yes, a project in Choreo is represented as a cell with regard to the Cell-based architecture.",docs\choreo-concepts\project.md/Cell-based Architecture,Cell-based Architecture
How are data planes structured and shared within Choreo?,"Data planes in Choreo are connected to your organization and are accessible to all projects within that organization. When you create an environment in a project, the data plane linked to the organization is automatically associated with a newly generated Kubernetes namespace.",docs\choreo-concepts\resource-hierarchy.md/Organizations and data planes,Organizations and data planes
"Can I associate multiple Kubernetes clusters with a single environment in Choreo, and why would I do that?","Yes, Choreo allows you to associate multiple Kubernetes clusters with a single environment. This capability helps you build highly resilient and resource-efficient solutions by distributing your workloads across different clusters.",docs\choreo-concepts\resource-hierarchy.md/Environments and data planes,Environments and data planes
How does Choreo facilitate multi-cluster deployments for my applications?,Choreo simplifies multi-cluster deployment by synchronizing your applications and workloads across all associated Kubernetes clusters within an environment. This allows you to perform multi-cluster deployment with just a single click.,docs\choreo-concepts\resource-hierarchy.md/Environments and data planes,Environments and data planes
Is it mandatory to use a separate Kubernetes cluster for each environment I create?,"No, it is not necessary to use a different Kubernetes cluster for each environment. You have the flexibility to create multiple environments on the same cluster. The diagrams provided are examples of specific solutions, and your architecture may require a different configuration.",docs\choreo-concepts\resource-hierarchy.md/Environments and data planes,Environments and data planes
Where do components reside within the Choreo project structure?,"Components in Choreo belong to a specific project. Environments are also provisioned on a per-project basis, meaning each project has its own set of environments.",docs\choreo-concepts\resource-hierarchy.md/Components and environments,Components and environments
How do I deploy a component to an environment in Choreo?,"When you deploy a component in Choreo, it is deployed as a container to a specified environment within your project.",docs\choreo-concepts\resource-hierarchy.md/Components and environments,Components and environments
"After deploying a component, can I promote its image to other environments?","Yes, once your component's container image is deployed to an environment, you can easily promote that same container image across other environments available within the same project.",docs\choreo-concepts\resource-hierarchy.md/Components and environments,Components and environments
